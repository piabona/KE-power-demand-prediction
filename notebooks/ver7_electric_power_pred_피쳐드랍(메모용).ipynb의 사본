{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1jMOAMrCdEchbVaVisarihL5ILRWzkK8z","timestamp":1693099801582}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 피쳐 드랍(메모용)"],"metadata":{"id":"n0TpNWSHE6xm"}},{"cell_type":"code","source":["# 37\n","selected_cols = ['day_hour_mean', 'THI','week','cos_time','sin_time','temp_2',\n","                 'hum_EMA','day','hum_RM','avg_power_change_rate_7d','wind_RM',\n","                 'temp_EMA','temp_RM','feels_temp','wind_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_1.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_1 = train_df_1.drop(columns=drop_cols)\n","test_df_1 = test_df_1.drop(columns=drop_cols)\n","\n","# 38\n","selected_cols = ['day_hour_mean', 'THI','cos_time','avg_power_change_rate_24h',\n","                 'avg_power_change_rate_7d', 'day',\n","                 'week','feels_temp','temp_2','hum_EMA','hum_RM']  # 남겨둘 피쳐\n","drop_cols = train_df_2.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_2 = train_df_2.drop(columns=drop_cols)\n","test_df_2 = test_df_2.drop(columns=drop_cols)\n","\n","# 39\n","selected_cols = ['day_hour_mean','sin_time','THI','cos_time','temp_2','wind_EMA','month','hum_RM'\n","                 'week','day','hum_EMA''avg_power_change_rate_7d','avg_power_change_rate_24h']  # 남겨둘 피쳐\n","drop_cols = train_df_3.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_3 = train_df_3.drop(columns=drop_cols)\n","test_df_3 = test_df_3.drop(columns=drop_cols)\n","\n","# 40\n","selected_cols = ['day_hour_mean','avg_power_change_rate_24h','temp_2','week','hum_EMA','month',\n","                'week','day','feels_temp','wind_EMA','sin_time','THI','wind_RM','temp_RM','hum_RM','avg_power_change_rate_7d','temp_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_4.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_4 = train_df_4.drop(columns=drop_cols)\n","test_df_4 = test_df_4.drop(columns=drop_cols)\n","\n","# 41\n","selected_cols = ['day_hour_mean','month', 'week','cos_time','sin_time', 'temp_2', 'avg_power_change_rate_7d',\n","                 'hum_RM','feels_temp','temp_RM','day','wind_EMA','wind_RM','THI','day', 'sin_time','temp_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_41.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_41 = train_df_41.drop(columns=drop_cols)\n","test_df_41 = test_df_41.drop(columns=drop_cols)\n","\n","# 42\n","selected_cols = ['day_hour_mean','cos_time','sin_time','week','avg_power_change_rate_7d',\n","                 'THI','temp_2','temp_EMA','temp_RM', 'hum_EMA', 'hum_RM']# 남겨둘 피쳐\n","drop_cols = train_df_42.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_42 = train_df_42.drop(columns=drop_cols)\n","test_df_42 = test_df_42.drop(columns=drop_cols)\n","\n","# 43\n","selected_cols = ['day_hour_mean','cos_time','sin_time','week','THI',\n","                 'temp_2','temp_EMA', 'hum_EMA', 'day','wind_RM']  # 남겨둘 피쳐\n","drop_cols = train_df_43.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_43 = train_df_43.drop(columns=drop_cols)\n","test_df_43 = test_df_43.drop(columns=drop_cols)\n","\n","# 44\n","selected_cols = ['day_hour_mean','cos_time','sin_time','week','THI',\n","'temp_2','temp_EMA', 'hum_EMA', 'day','hum_RM']  # 남겨둘 피쳐\n","drop_cols = train_df_44.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_44 = train_df_44.drop(columns=drop_cols)\n","test_df_44 = test_df_44.drop(columns=drop_cols)\n","\n","# 45\n","selected_cols = ['day_hour_mean','weekend','week','day','month','cos_time','sin_time',\n","                 'avg_power_change_rate_7d','THI','avg_power_change_rate_24h',\n","                 'temp_2','wind_EMA','wind_RM','hum_RM','temp_RM']  # 남겨둘 피쳐\n","drop_cols = train_df_45.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_45 = train_df_45.drop(columns=drop_cols)\n","test_df_45 = test_df_45.drop(columns=drop_cols)\n","\n","# 46\n","selected_cols = ['day_hour_mean','weekend','week','THI','month','day','hum_EMA','wind_RM',\n","'cos_time','temp_2','wind_EMA','hum_RM','temp_EMA','temp_RM','avg_power_change_rate_24h',\n","                 'avg_power_change_rate_7d']  # 남겨둘 피쳐\n","drop_cols = train_df_46.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_46 = train_df_46.drop(columns=drop_cols)\n","test_df_46 = test_df_46.drop(columns=drop_cols)\n","\n","# 47\n","selected_cols = ['day_hour_mean','weekend','week','THI','hum_EMA'\n","'cos_time','temp_2','avg_power_change_rate_7d','wind_RM','hum_RM']  # 남겨둘 피쳐\n","drop_cols = train_df_47.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_47 = train_df_47.drop(columns=drop_cols)\n","test_df_47 = test_df_47.drop(columns=drop_cols)\n","\n","# 48\n","selected_cols = ['day_hour_mean','weekend','week','THI','temp_EMA','sin_time'\n","'cos_time','temp_2','avg_power_change_rate_7d','hum_RM']  # 남겨둘 피쳐\n","drop_cols = train_df_48.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_48 = train_df_48.drop(columns=drop_cols)\n","test_df_48 = test_df_48.drop(columns=drop_cols)\n","\n","# 49\n","selected_cols = ['day_hour_mean','weekend','sin_time','cos_time','THI',\n","'temp_2','temp_EMA','wind_EMA','avg_power_change_rate_24d','hum_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_49.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_49 = train_df_49.drop(columns=drop_cols)\n","test_df_49 = test_df_49.drop(columns=drop_cols)\n","\n","# 50\n","selected_cols = ['day_hour_mean','weekend','THI','week'\n","'temp_2','temp_EMA','wind_EMA','hum_RM','wind_RM','hum_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_50.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_50 = train_df_50.drop(columns=drop_cols)\n","test_df_50 = test_df_50.drop(columns=drop_cols)\n","\n","# 51\n","selected_cols = ['day_hour_mean','weekend','cos_time','THI','week'\n","'temp_2','hum_RM','wind_EMA','avg_power_change_rate_24d','avg_power_change_rate_24d']  # 남겨둘 피쳐\n","drop_cols = train_df_51.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_51 = train_df_51.drop(columns=drop_cols)\n","test_df_51 = test_df_51.drop(columns=drop_cols)\n","\n","# 52\n","selected_cols = ['day_hour_mean','weekend','THI','week','cos_time',\n","'temp_2','wind_RM', 'hum_RM', 'hum_EMA', 'temp_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_52.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_52 = train_df_52.drop(columns=drop_cols)\n","test_df_52 = test_df_52.drop(columns=drop_cols)\n","\n","# 53\n","selected_cols = ['day_hour_mean','weekend','week','cos_time','hum_RM','THI'\n","'temp_2']  # 남겨둘 피쳐\n","# ,'temp_RM', 'hum_RM','avg_power_change_rate_7d','day'\n","drop_cols = train_df_53.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_53 = train_df_53.drop(columns=drop_cols)\n","test_df_53 = test_df_53.drop(columns=drop_cols)\n","\n","# 54\n","selected_cols = ['day_hour_mean','weekend','week','day','wind_EMA','temp_RM',\n","'temp_2','temp_EMA','hum_RM', 'hum_EMA','avg_power_change_rate_7d']  # 남겨둘 피쳐\n","drop_cols = train_df_54.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_54 = train_df_54.drop(columns=drop_cols)\n","test_df_54 = test_df_54.drop(columns=drop_cols)\n","\n","# 55\n","selected_cols = ['day_hour_mean','weekend','cos_time','week','THI',\n","'hum_RM', 'wind_EMA', 'temp_EMA', 'temp_2','avg_power_change_rate_7d']  # 남겨둘 피쳐\n","drop_cols = train_df_55.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_55 = train_df_55.drop(columns=drop_cols)\n","test_df_55 = test_df_55.drop(columns=drop_cols)\n","\n","# 56\n","selected_cols = ['day_hour_mean','weekend','cos_time','week','THI','temp_2',\n","'hum_RM', 'hum_EMA', 'temp_EMA' , 'avg_power_change_rate_24h']  # 남겨둘 피쳐\n","drop_cols = train_df_56.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_56 = train_df_56.drop(columns=drop_cols)\n","test_df_56 = test_df_56.drop(columns=drop_cols)\n","\n","# 57\n","selected_cols = ['day_hour_mean','weekend','cos_time','THI','temp_2','day','hum_EMA',\n","'hum_RM', 'wind_RM','temp_EMA','avg_power_change_rate_7d']  # 남겨둘 피쳐\n","drop_cols = train_df_57.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_57 = train_df_57.drop(columns=drop_cols)\n","test_df_57 = test_df_57.drop(columns=drop_cols)\n","\n","# 58\n","selected_cols = ['day_hour_mean','weekend','THI','temp_2','week',\n","'hum_RM', 'wind_RM','wind_EMA','temp_EMA','avg_power_change_rate_7d']  # 남겨둘 피쳐\n","drop_cols = train_df_58.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_58 = train_df_58.drop(columns=drop_cols)\n","test_df_58 = test_df_58.drop(columns=drop_cols)\n","\n","# 59\n","selected_cols = ['day_hour_mean','weekend','week','temp2','avg_power_change_rate_7d','THI','cos_time','sin_time',\n","'hum_RM', 'temp_RM','wind_RM','hum_EMA','temp_EMA','wind_EMA','month']  # 남겨둘 피쳐\n","drop_cols = train_df_59.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_59 = train_df_59.drop(columns=drop_cols)\n","test_df_59 = test_df_59.drop(columns=drop_cols)\n","\n","# 60\n","selected_cols = ['day_hour_mean','weekend','THI','day','week','avg_power_change_rate_7d',\n","'temp_2','cos_time','wind_RM','wind_EMA','feels_temp']  # 남겨둘 피쳐\n","drop_cols = train_df_60.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_60 = train_df_60.drop(columns=drop_cols)\n","test_df_60 = test_df_60.drop(columns=drop_cols)\n","\n","# 61\n","selected_cols = ['day_hour_mean','THI','sin_time','temp_2','day',\n","'wind_RM','wind_EMA','hum_EMA','hum_RM','temp_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_61.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_61 = train_df_61.drop(columns=drop_cols)\n","test_df_61 = test_df_61.drop(columns=drop_cols)\n","\n","# 62\n","selected_cols = ['day_hour_mean','THI','sin_time','cos_time','temp_2','week',\n","'wind_RM','hum_EMA','hum_RM','temp_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_62.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_62 = train_df_62.drop(columns=drop_cols)\n","test_df_62 = test_df_62.drop(columns=drop_cols)\n","\n","# 63\n","selected_cols = ['day_hour_mean','THI','cos_time','temp_2','week','day','month',\n","'wind_RM','hum_EMA','hum_RM','temp_EMA', 'wind_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_63.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_63 = train_df_63.drop(columns=drop_cols)\n","test_df_63 = test_df_63.drop(columns=drop_cols)\n","\n","# 64\n","selected_cols = ['day_hour_mean','THI','cos_time','temp_2','day','week',\n","'wind_RM','hum_EMA','hum_RM','temp_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_64.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_64 = train_df_64.drop(columns=drop_cols)\n","test_df_64 = test_df_64.drop(columns=drop_cols)\n","\n","# 65\n","selected_cols = ['day_hour_mean','THI','temp_EMA','sin_time','temp_2','week','avg_power_change_rate_7d','day',\n","'cos_time','hum_EMA','hum_RM','temp_EMA','wind_EMA','day','wind_RM','weekned','avg_power_change_rate_24h','temp_RM']  # 남겨둘 피쳐\n","drop_cols = train_df_65.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_65 = train_df_65.drop(columns=drop_cols)\n","test_df_65 = test_df_65.drop(columns=drop_cols)\n","\n","# 66\n","selected_cols = ['day_hour_mean','THI','temp_EMA','temp_2','week',\n","'cos_time','wind_EMA','wind_RM','hum_RM','temp_EMA']  # 남겨둘 피쳐\n","drop_cols = train_df_66.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_66 = train_df_66.drop(columns=drop_cols)\n","test_df_66 = test_df_66.drop(columns=drop_cols)\n","\n","# 67\n","selected_cols = ['day_hour_mean','THI','hum_EMA','temp_2','day','week',\n","'avg_power_change_rate_24h','hum_RM','temp_EMA','cos_time']  # 남겨둘 피쳐\n","drop_cols = train_df_67.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_67 = train_df_67.drop(columns=drop_cols)\n","test_df_67 = test_df_67.drop(columns=drop_cols)\n","\n","# 68\n","selected_cols = ['day_hour_mean','THI','hum_EMA','temp_2','week',\n","'wind_RM','wind_EMA','hum_RM','temp_EMA','cos_time']  # 남겨둘 피쳐\n","drop_cols = train_df_68.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_68 = train_df_68.drop(columns=drop_cols)\n","test_df_68 = test_df_68.drop(columns=drop_cols)\n","\n","# 69\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_69.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_69 = train_df_69.drop(columns=drop_cols)\n","test_df_69 = test_df_69.drop(columns=drop_cols)\n","\n","# 70\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_70.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_70 = train_df_70.drop(columns=drop_cols)\n","test_df_70 = test_df_70.drop(columns=drop_cols)\n","\n","# 71\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_71.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_71 = train_df_71.drop(columns=drop_cols)\n","test_df_71 = test_df_71.drop(columns=drop_cols)\n","\n","# 72\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_72.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_72 = train_df_72.drop(columns=drop_cols)\n","test_df_72 = test_df_72.drop(columns=drop_cols)\n","\n","# 73\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_73.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_73 = train_df_73.drop(columns=drop_cols)\n","test_df_73 = test_df_73.drop(columns=drop_cols)\n","\n","# 74\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_74.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_74 = train_df_74.drop(columns=drop_cols)\n","test_df_74 = test_df_74.drop(columns=drop_cols)\n","\n","# 75\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_75.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_75 = train_df_75.drop(columns=drop_cols)\n","test_df_75 = test_df_75.drop(columns=drop_cols)\n","\n","# 76\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_76.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_76 = train_df_76.drop(columns=drop_cols)\n","test_df_76 = test_df_76.drop(columns=drop_cols)\n","\n","# 77\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_77.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_77 = train_df_77.drop(columns=drop_cols)\n","test_df_77 = test_df_77.drop(columns=drop_cols)\n","\n","# 78\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_78.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_78 = train_df_78.drop(columns=drop_cols)\n","test_df_78 = test_df_78.drop(columns=drop_cols)\n","\n","# 79\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_79.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_79 = train_df_79.drop(columns=drop_cols)\n","test_df_79 = test_df_79.drop(columns=drop_cols)\n","\n","# 80\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_80.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_80 = train_df_80.drop(columns=drop_cols)\n","test_df_80 = test_df_80.drop(columns=drop_cols)\n","\n","# 81\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_81.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_81 = train_df_81.drop(columns=drop_cols)\n","test_df_81 = test_df_81.drop(columns=drop_cols)\n","\n","# 82\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_82.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_82 = train_df_82.drop(columns=drop_cols)\n","test_df_82 = test_df_82.drop(columns=drop_cols)\n","\n","# 83\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_83.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_83 = train_df_83.drop(columns=drop_cols)\n","test_df_83 = test_df_83.drop(columns=drop_cols)\n","\n","# 84\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_84.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_84 = train_df_84.drop(columns=drop_cols)\n","test_df_84 = test_df_84.drop(columns=drop_cols)\n","\n","# 85\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_85.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_85 = train_df_85.drop(columns=drop_cols)\n","test_df_85 = test_df_85.drop(columns=drop_cols)\n","\n","# 86\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_86.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_86 = train_df_86.drop(columns=drop_cols)\n","test_df_86 = test_df_86.drop(columns=drop_cols)\n","\n","# 87\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_87.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_87 = train_df_87.drop(columns=drop_cols)\n","test_df_87 = test_df_87.drop(columns=drop_cols)\n","\n","# 88\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_88.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_88 = train_df_88.drop(columns=drop_cols)\n","test_df_88 = test_df_88.drop(columns=drop_cols)\n","\n","# 89\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_89.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_89 = train_df_89.drop(columns=drop_cols)\n","test_df_89 = test_df_89.drop(columns=drop_cols)\n","\n","# 90\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_90.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_90 = train_df_90.drop(columns=drop_cols)\n","test_df_90 = test_df_90.drop(columns=drop_cols)\n","\n","# 91\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_91.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_91 = train_df_91.drop(columns=drop_cols)\n","test_df_91 = test_df_91.drop(columns=drop_cols)\n","\n","# 92\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_92.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_92 = train_df_92.drop(columns=drop_cols)\n","test_df_92 = test_df_92.drop(columns=drop_cols)\n","\n","# 93\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_93.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_93 = train_df_93.drop(columns=drop_cols)\n","test_df_93 = test_df_93.drop(columns=drop_cols)\n","\n","# 94\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_94.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_94 = train_df_94.drop(columns=drop_cols)\n","test_df_94 = test_df_94.drop(columns=drop_cols)\n","\n","# 95\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_95.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_95 = train_df_95.drop(columns=drop_cols)\n","test_df_95 = test_df_95.drop(columns=drop_cols)\n","\n","# 96\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_96.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_96 = train_df_96.drop(columns=drop_cols)\n","test_df_96 = test_df_96.drop(columns=drop_cols)\n","\n","# 97\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_97.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_97 = train_df_97.drop(columns=drop_cols)\n","test_df_97 = test_df_97.drop(columns=drop_cols)\n","\n","# 98\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_98.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_98 = train_df_98.drop(columns=drop_cols)\n","test_df_98 = test_df_98.drop(columns=drop_cols)\n","\n","# 99\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_99.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_99 = train_df_99.drop(columns=drop_cols)\n","test_df_99 = test_df_99.drop(columns=drop_cols)\n","\n","# 100\n","selected_cols = []  # 남겨둘 피쳐\n","drop_cols = train_df_100.columns[2:].tolist()\n","drop_cols = [col for col in drop_cols if col not in selected_cols]\n","train_df_100 = train_df_100.drop(columns=drop_cols)\n","test_df_100 = test_df_100.drop(columns=drop_cols)"],"metadata":{"id":"ETACxKDLE6WR"},"execution_count":null,"outputs":[]}]}