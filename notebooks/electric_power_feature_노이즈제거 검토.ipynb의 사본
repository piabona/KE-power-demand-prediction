{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1pPNeSIAHp-WkwBMaj0oHfPVTArgkqHJx","timestamp":1692683401404}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JApJOouCTOtp","executionInfo":{"status":"ok","timestamp":1692683528879,"user_tz":-540,"elapsed":66662,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"14c2af71-2aec-4bf5-c2d6-8ec332f39b21"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","DATA_PATH = '/content/drive/MyDrive/데이콘 캐글 컴페티션/DACON_23.07_PowerConsumption/'\n","SEED = 42"],"metadata":{"id":"O4pbtR7JTeGT","executionInfo":{"status":"ok","timestamp":1692683676445,"user_tz":-540,"elapsed":481,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"thKlbBwte6xh","executionInfo":{"status":"ok","timestamp":1692683678680,"user_tz":-540,"elapsed":2,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["train_df = pd.read_csv(f\"{DATA_PATH}train.csv\")\n","test_df = pd.read_csv(f\"{DATA_PATH}test.csv\")\n","building_info = pd.read_csv(f\"{DATA_PATH}building_info.csv\")"],"metadata":{"id":"GsJbGbzmTpGq","executionInfo":{"status":"ok","timestamp":1692683684338,"user_tz":-540,"elapsed":517,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["train_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"XSU21GRQ6k1f","executionInfo":{"status":"ok","timestamp":1692683684341,"user_tz":-540,"elapsed":60,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"e4ac40fa-14f2-4226-c7ee-cae05d3964b1"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          num_date_time  건물번호           일시  기온(C)  강수량(mm)  풍속(m/s)  습도(%)  \\\n","0         1_20220601 00     1  20220601 00   18.6      NaN      0.9   42.0   \n","1         1_20220601 01     1  20220601 01   18.0      NaN      1.1   45.0   \n","2         1_20220601 02     1  20220601 02   17.7      NaN      1.5   45.0   \n","3         1_20220601 03     1  20220601 03   16.7      NaN      1.4   48.0   \n","4         1_20220601 04     1  20220601 04   18.4      NaN      2.8   43.0   \n","...                 ...   ...          ...    ...      ...      ...    ...   \n","203995  100_20220824 19   100  20220824 19   23.1      NaN      0.9   86.0   \n","203996  100_20220824 20   100  20220824 20   22.4      NaN      1.3   86.0   \n","203997  100_20220824 21   100  20220824 21   21.3      NaN      1.0   92.0   \n","203998  100_20220824 22   100  20220824 22   21.0      NaN      0.3   94.0   \n","203999  100_20220824 23   100  20220824 23   20.7      NaN      0.1   95.0   \n","\n","        일조(hr)  일사(MJ/m2)  전력소비량(kWh)  \n","0          NaN        NaN     1085.28  \n","1          NaN        NaN     1047.36  \n","2          NaN        NaN      974.88  \n","3          NaN        NaN      953.76  \n","4          NaN        NaN      986.40  \n","...        ...        ...         ...  \n","203995     0.5        NaN      881.04  \n","203996     0.0        NaN      798.96  \n","203997     NaN        NaN      825.12  \n","203998     NaN        NaN      640.08  \n","203999     NaN        NaN      540.24  \n","\n","[204000 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-67e3e321-fcbb-491e-91aa-ea03bef0bb16\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_date_time</th>\n","      <th>건물번호</th>\n","      <th>일시</th>\n","      <th>기온(C)</th>\n","      <th>강수량(mm)</th>\n","      <th>풍속(m/s)</th>\n","      <th>습도(%)</th>\n","      <th>일조(hr)</th>\n","      <th>일사(MJ/m2)</th>\n","      <th>전력소비량(kWh)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1_20220601 00</td>\n","      <td>1</td>\n","      <td>20220601 00</td>\n","      <td>18.6</td>\n","      <td>NaN</td>\n","      <td>0.9</td>\n","      <td>42.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1085.28</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1_20220601 01</td>\n","      <td>1</td>\n","      <td>20220601 01</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>1.1</td>\n","      <td>45.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1047.36</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1_20220601 02</td>\n","      <td>1</td>\n","      <td>20220601 02</td>\n","      <td>17.7</td>\n","      <td>NaN</td>\n","      <td>1.5</td>\n","      <td>45.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>974.88</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1_20220601 03</td>\n","      <td>1</td>\n","      <td>20220601 03</td>\n","      <td>16.7</td>\n","      <td>NaN</td>\n","      <td>1.4</td>\n","      <td>48.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>953.76</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1_20220601 04</td>\n","      <td>1</td>\n","      <td>20220601 04</td>\n","      <td>18.4</td>\n","      <td>NaN</td>\n","      <td>2.8</td>\n","      <td>43.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>986.40</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>203995</th>\n","      <td>100_20220824 19</td>\n","      <td>100</td>\n","      <td>20220824 19</td>\n","      <td>23.1</td>\n","      <td>NaN</td>\n","      <td>0.9</td>\n","      <td>86.0</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>881.04</td>\n","    </tr>\n","    <tr>\n","      <th>203996</th>\n","      <td>100_20220824 20</td>\n","      <td>100</td>\n","      <td>20220824 20</td>\n","      <td>22.4</td>\n","      <td>NaN</td>\n","      <td>1.3</td>\n","      <td>86.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>798.96</td>\n","    </tr>\n","    <tr>\n","      <th>203997</th>\n","      <td>100_20220824 21</td>\n","      <td>100</td>\n","      <td>20220824 21</td>\n","      <td>21.3</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>92.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>825.12</td>\n","    </tr>\n","    <tr>\n","      <th>203998</th>\n","      <td>100_20220824 22</td>\n","      <td>100</td>\n","      <td>20220824 22</td>\n","      <td>21.0</td>\n","      <td>NaN</td>\n","      <td>0.3</td>\n","      <td>94.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>640.08</td>\n","    </tr>\n","    <tr>\n","      <th>203999</th>\n","      <td>100_20220824 23</td>\n","      <td>100</td>\n","      <td>20220824 23</td>\n","      <td>20.7</td>\n","      <td>NaN</td>\n","      <td>0.1</td>\n","      <td>95.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>540.24</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>204000 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67e3e321-fcbb-491e-91aa-ea03bef0bb16')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-67e3e321-fcbb-491e-91aa-ea03bef0bb16 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-67e3e321-fcbb-491e-91aa-ea03bef0bb16');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2e70e020-3409-4e41-be30-78e7abbc3e77\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2e70e020-3409-4e41-be30-78e7abbc3e77')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2e70e020-3409-4e41-be30-78e7abbc3e77 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["train_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gcw6OeGMT0-M","executionInfo":{"status":"ok","timestamp":1692683684925,"user_tz":-540,"elapsed":636,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"ddd9af09-6551-4bd8-e3cf-11848b320f1e"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 204000 entries, 0 to 203999\n","Data columns (total 10 columns):\n"," #   Column         Non-Null Count   Dtype  \n","---  ------         --------------   -----  \n"," 0   num_date_time  204000 non-null  object \n"," 1   건물번호           204000 non-null  int64  \n"," 2   일시             204000 non-null  object \n"," 3   기온(C)          204000 non-null  float64\n"," 4   강수량(mm)        43931 non-null   float64\n"," 5   풍속(m/s)        203981 non-null  float64\n"," 6   습도(%)          203991 non-null  float64\n"," 7   일조(hr)         128818 non-null  float64\n"," 8   일사(MJ/m2)      116087 non-null  float64\n"," 9   전력소비량(kWh)     204000 non-null  float64\n","dtypes: float64(7), int64(1), object(2)\n","memory usage: 15.6+ MB\n"]}]},{"cell_type":"code","source":["test_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"cyuY4mcybCxx","executionInfo":{"status":"ok","timestamp":1692683684926,"user_tz":-540,"elapsed":101,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"8a74d0a0-d2ee-464f-8329-55ff7509a0d4"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         num_date_time  건물번호           일시  기온(C)  강수량(mm)  풍속(m/s)  습도(%)\n","0        1_20220825 00     1  20220825 00   23.5      0.0      2.2     72\n","1        1_20220825 01     1  20220825 01   23.0      0.0      0.9     72\n","2        1_20220825 02     1  20220825 02   22.7      0.0      1.5     75\n","3        1_20220825 03     1  20220825 03   22.1      0.0      1.3     78\n","4        1_20220825 04     1  20220825 04   21.8      0.0      1.0     77\n","...                ...   ...          ...    ...      ...      ...    ...\n","16795  100_20220831 19   100  20220831 19   22.5      0.0      0.9     84\n","16796  100_20220831 20   100  20220831 20   20.7      0.0      0.4     95\n","16797  100_20220831 21   100  20220831 21   20.2      0.0      0.4     98\n","16798  100_20220831 22   100  20220831 22   20.1      0.0      1.1     97\n","16799  100_20220831 23   100  20220831 23   19.1      0.0      0.1     99\n","\n","[16800 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-8c926d21-7282-4786-8aef-e08f4f3e78a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_date_time</th>\n","      <th>건물번호</th>\n","      <th>일시</th>\n","      <th>기온(C)</th>\n","      <th>강수량(mm)</th>\n","      <th>풍속(m/s)</th>\n","      <th>습도(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1_20220825 00</td>\n","      <td>1</td>\n","      <td>20220825 00</td>\n","      <td>23.5</td>\n","      <td>0.0</td>\n","      <td>2.2</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1_20220825 01</td>\n","      <td>1</td>\n","      <td>20220825 01</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>0.9</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1_20220825 02</td>\n","      <td>1</td>\n","      <td>20220825 02</td>\n","      <td>22.7</td>\n","      <td>0.0</td>\n","      <td>1.5</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1_20220825 03</td>\n","      <td>1</td>\n","      <td>20220825 03</td>\n","      <td>22.1</td>\n","      <td>0.0</td>\n","      <td>1.3</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1_20220825 04</td>\n","      <td>1</td>\n","      <td>20220825 04</td>\n","      <td>21.8</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>16795</th>\n","      <td>100_20220831 19</td>\n","      <td>100</td>\n","      <td>20220831 19</td>\n","      <td>22.5</td>\n","      <td>0.0</td>\n","      <td>0.9</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>16796</th>\n","      <td>100_20220831 20</td>\n","      <td>100</td>\n","      <td>20220831 20</td>\n","      <td>20.7</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>16797</th>\n","      <td>100_20220831 21</td>\n","      <td>100</td>\n","      <td>20220831 21</td>\n","      <td>20.2</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>98</td>\n","    </tr>\n","    <tr>\n","      <th>16798</th>\n","      <td>100_20220831 22</td>\n","      <td>100</td>\n","      <td>20220831 22</td>\n","      <td>20.1</td>\n","      <td>0.0</td>\n","      <td>1.1</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>16799</th>\n","      <td>100_20220831 23</td>\n","      <td>100</td>\n","      <td>20220831 23</td>\n","      <td>19.1</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>99</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>16800 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c926d21-7282-4786-8aef-e08f4f3e78a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8c926d21-7282-4786-8aef-e08f4f3e78a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8c926d21-7282-4786-8aef-e08f4f3e78a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd304596-2444-40b9-b257-80f8927cc1ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd304596-2444-40b9-b257-80f8927cc1ce')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd304596-2444-40b9-b257-80f8927cc1ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["test_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MyikbSS5T137","executionInfo":{"status":"ok","timestamp":1692683684927,"user_tz":-540,"elapsed":100,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"69125844-b224-4329-92d8-d5396eda8da9"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 16800 entries, 0 to 16799\n","Data columns (total 7 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   num_date_time  16800 non-null  object \n"," 1   건물번호           16800 non-null  int64  \n"," 2   일시             16800 non-null  object \n"," 3   기온(C)          16800 non-null  float64\n"," 4   강수량(mm)        16800 non-null  float64\n"," 5   풍속(m/s)        16800 non-null  float64\n"," 6   습도(%)          16800 non-null  int64  \n","dtypes: float64(3), int64(2), object(2)\n","memory usage: 918.9+ KB\n"]}]},{"cell_type":"code","source":["building_info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"D71gqpa4kS1h","executionInfo":{"status":"ok","timestamp":1692683684927,"user_tz":-540,"elapsed":89,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"8798cae1-3415-4715-c322-589b48b5d461"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    건물번호    건물유형    연면적(m2)   냉방면적(m2) 태양광용량(kW) ESS저장용량(kWh) PCS용량(kW)\n","0      1    건물기타  110634.00   39570.00         -            -         -\n","1      2    건물기타  122233.47   99000.00         -            -         -\n","2      3    건물기타  171243.00  113950.00        40            -         -\n","3      4    건물기타   74312.98   34419.62        60            -         -\n","4      5    건물기타  205884.00  150000.00         -         2557      1000\n","..   ...     ...        ...        ...       ...          ...       ...\n","95    96  호텔및리조트   93314.00   60500.00         -            -         -\n","96    97  호텔및리조트   55144.67   25880.00         -            -         -\n","97    98  호텔및리조트   53578.62   17373.75         -            -         -\n","98    99  호텔및리조트   53499.00   40636.00         -            -         -\n","99   100  호텔및리조트   57497.84   40035.23         -            -         -\n","\n","[100 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-1af61817-efb9-4e14-ad29-6f697e7f4f68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>건물번호</th>\n","      <th>건물유형</th>\n","      <th>연면적(m2)</th>\n","      <th>냉방면적(m2)</th>\n","      <th>태양광용량(kW)</th>\n","      <th>ESS저장용량(kWh)</th>\n","      <th>PCS용량(kW)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>건물기타</td>\n","      <td>110634.00</td>\n","      <td>39570.00</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>건물기타</td>\n","      <td>122233.47</td>\n","      <td>99000.00</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>건물기타</td>\n","      <td>171243.00</td>\n","      <td>113950.00</td>\n","      <td>40</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>건물기타</td>\n","      <td>74312.98</td>\n","      <td>34419.62</td>\n","      <td>60</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>건물기타</td>\n","      <td>205884.00</td>\n","      <td>150000.00</td>\n","      <td>-</td>\n","      <td>2557</td>\n","      <td>1000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>96</td>\n","      <td>호텔및리조트</td>\n","      <td>93314.00</td>\n","      <td>60500.00</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>97</td>\n","      <td>호텔및리조트</td>\n","      <td>55144.67</td>\n","      <td>25880.00</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>98</td>\n","      <td>호텔및리조트</td>\n","      <td>53578.62</td>\n","      <td>17373.75</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>99</td>\n","      <td>호텔및리조트</td>\n","      <td>53499.00</td>\n","      <td>40636.00</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>100</td>\n","      <td>호텔및리조트</td>\n","      <td>57497.84</td>\n","      <td>40035.23</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>-</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1af61817-efb9-4e14-ad29-6f697e7f4f68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1af61817-efb9-4e14-ad29-6f697e7f4f68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1af61817-efb9-4e14-ad29-6f697e7f4f68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-849b5a93-ea9e-434a-a892-e3d8bf98f3ea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-849b5a93-ea9e-434a-a892-e3d8bf98f3ea')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-849b5a93-ea9e-434a-a892-e3d8bf98f3ea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["building_info.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yAMmWyfNhLoq","executionInfo":{"status":"ok","timestamp":1692683684936,"user_tz":-540,"elapsed":96,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"cb02b1df-18dc-4fb4-d33f-ef1d783c428d"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100 entries, 0 to 99\n","Data columns (total 7 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   건물번호          100 non-null    int64  \n"," 1   건물유형          100 non-null    object \n"," 2   연면적(m2)       100 non-null    float64\n"," 3   냉방면적(m2)      100 non-null    float64\n"," 4   태양광용량(kW)     100 non-null    object \n"," 5   ESS저장용량(kWh)  100 non-null    object \n"," 6   PCS용량(kW)     100 non-null    object \n","dtypes: float64(2), int64(1), object(4)\n","memory usage: 5.6+ KB\n"]}]},{"cell_type":"code","source":["building_info['태양광용량(kW)'] = building_info['태양광용량(kW)'].replace('-', 0).astype(float)\n","building_info['ESS저장용량(kWh)'] = building_info['ESS저장용량(kWh)'].replace('-', 0).astype(float)\n","building_info['PCS용량(kW)'] = building_info['PCS용량(kW)'].replace('-', 0).astype(float)"],"metadata":{"id":"P2w6Q8LHFgpc","executionInfo":{"status":"ok","timestamp":1692683684937,"user_tz":-540,"elapsed":94,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["building_info.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g1seNbyO8JK-","executionInfo":{"status":"ok","timestamp":1692683684938,"user_tz":-540,"elapsed":94,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"a833628f-03f3-4f2d-9215-6ec6ca9448cd"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100 entries, 0 to 99\n","Data columns (total 7 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   건물번호          100 non-null    int64  \n"," 1   건물유형          100 non-null    object \n"," 2   연면적(m2)       100 non-null    float64\n"," 3   냉방면적(m2)      100 non-null    float64\n"," 4   태양광용량(kW)     100 non-null    float64\n"," 5   ESS저장용량(kWh)  100 non-null    float64\n"," 6   PCS용량(kW)     100 non-null    float64\n","dtypes: float64(5), int64(1), object(1)\n","memory usage: 5.6+ KB\n"]}]},{"cell_type":"code","source":["train_df = pd.merge(train_df, building_info, on='건물번호', how='left')\n","test_df = pd.merge(test_df, building_info, on='건물번호', how='left')"],"metadata":{"id":"nFbX1Bpu8MnC","executionInfo":{"status":"ok","timestamp":1692683684938,"user_tz":-540,"elapsed":90,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# num_date_time, 태양광, ESS, PCS 제거\n","train_df = train_df.drop(columns=['num_date_time', '태양광용량(kW)','ESS저장용량(kWh)', 'PCS용량(kW)'])\n","test_df = test_df.drop(columns=['num_date_time', '태양광용량(kW)', 'ESS저장용량(kWh)', 'PCS용량(kW)'])"],"metadata":{"id":"2MahnWbCb1lG","executionInfo":{"status":"ok","timestamp":1692683684939,"user_tz":-540,"elapsed":90,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# 변수 영문명으로 변경\n","train_cols = ['building_num', 'date_time', 'temp', 'pred', 'wind', 'hum', 'sunshine', 'solar_rad', 'power', 'type', 'area', 'cooling_area']\n","test_cols = ['building_num', 'date_time', 'temp', 'pred', 'wind', 'hum', 'type', 'area', 'cooling_area']\n","\n","train_df.columns = train_cols\n","test_df.columns = test_cols\n","\n","# 전력량 맨 앞으로 이동\n","train_df = train_df[['power','building_num', 'date_time', 'temp', 'pred', 'wind', 'hum', 'sunshine', 'solar_rad', 'type', 'area', 'cooling_area']]"],"metadata":{"id":"baP-9n-4nonb","executionInfo":{"status":"ok","timestamp":1692683684939,"user_tz":-540,"elapsed":89,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["train_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"A1a-jG5zp5Vu","executionInfo":{"status":"ok","timestamp":1692683685556,"user_tz":-540,"elapsed":700,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"822fb33c-b410-44cd-8c20-13363a1bd19e"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     power  building_num    date_time  temp  pred  wind   hum  sunshine  \\\n","0  1085.28             1  20220601 00  18.6   NaN   0.9  42.0       NaN   \n","1  1047.36             1  20220601 01  18.0   NaN   1.1  45.0       NaN   \n","2   974.88             1  20220601 02  17.7   NaN   1.5  45.0       NaN   \n","3   953.76             1  20220601 03  16.7   NaN   1.4  48.0       NaN   \n","4   986.40             1  20220601 04  18.4   NaN   2.8  43.0       NaN   \n","\n","   solar_rad  type      area  cooling_area  \n","0        NaN  건물기타  110634.0       39570.0  \n","1        NaN  건물기타  110634.0       39570.0  \n","2        NaN  건물기타  110634.0       39570.0  \n","3        NaN  건물기타  110634.0       39570.0  \n","4        NaN  건물기타  110634.0       39570.0  "],"text/html":["\n","  <div id=\"df-6201a273-308e-4c03-bfc7-99d5920fff6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>power</th>\n","      <th>building_num</th>\n","      <th>date_time</th>\n","      <th>temp</th>\n","      <th>pred</th>\n","      <th>wind</th>\n","      <th>hum</th>\n","      <th>sunshine</th>\n","      <th>solar_rad</th>\n","      <th>type</th>\n","      <th>area</th>\n","      <th>cooling_area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1085.28</td>\n","      <td>1</td>\n","      <td>20220601 00</td>\n","      <td>18.6</td>\n","      <td>NaN</td>\n","      <td>0.9</td>\n","      <td>42.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1047.36</td>\n","      <td>1</td>\n","      <td>20220601 01</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>1.1</td>\n","      <td>45.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>974.88</td>\n","      <td>1</td>\n","      <td>20220601 02</td>\n","      <td>17.7</td>\n","      <td>NaN</td>\n","      <td>1.5</td>\n","      <td>45.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>953.76</td>\n","      <td>1</td>\n","      <td>20220601 03</td>\n","      <td>16.7</td>\n","      <td>NaN</td>\n","      <td>1.4</td>\n","      <td>48.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>986.40</td>\n","      <td>1</td>\n","      <td>20220601 04</td>\n","      <td>18.4</td>\n","      <td>NaN</td>\n","      <td>2.8</td>\n","      <td>43.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6201a273-308e-4c03-bfc7-99d5920fff6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6201a273-308e-4c03-bfc7-99d5920fff6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6201a273-308e-4c03-bfc7-99d5920fff6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c447a92b-82d1-4b12-9f3e-35abb0df161c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c447a92b-82d1-4b12-9f3e-35abb0df161c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c447a92b-82d1-4b12-9f3e-35abb0df161c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["test_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"OZZ9uYkap7aT","executionInfo":{"status":"ok","timestamp":1692683685556,"user_tz":-540,"elapsed":132,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"8716ed72-1c27-4d13-d7ec-95aeea566e3f"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   building_num    date_time  temp  pred  wind  hum  type      area  \\\n","0             1  20220825 00  23.5   0.0   2.2   72  건물기타  110634.0   \n","1             1  20220825 01  23.0   0.0   0.9   72  건물기타  110634.0   \n","2             1  20220825 02  22.7   0.0   1.5   75  건물기타  110634.0   \n","3             1  20220825 03  22.1   0.0   1.3   78  건물기타  110634.0   \n","4             1  20220825 04  21.8   0.0   1.0   77  건물기타  110634.0   \n","\n","   cooling_area  \n","0       39570.0  \n","1       39570.0  \n","2       39570.0  \n","3       39570.0  \n","4       39570.0  "],"text/html":["\n","  <div id=\"df-08872abc-c62c-4213-bcea-d620c00aa7ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>building_num</th>\n","      <th>date_time</th>\n","      <th>temp</th>\n","      <th>pred</th>\n","      <th>wind</th>\n","      <th>hum</th>\n","      <th>type</th>\n","      <th>area</th>\n","      <th>cooling_area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>20220825 00</td>\n","      <td>23.5</td>\n","      <td>0.0</td>\n","      <td>2.2</td>\n","      <td>72</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>20220825 01</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>0.9</td>\n","      <td>72</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>20220825 02</td>\n","      <td>22.7</td>\n","      <td>0.0</td>\n","      <td>1.5</td>\n","      <td>75</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>20220825 03</td>\n","      <td>22.1</td>\n","      <td>0.0</td>\n","      <td>1.3</td>\n","      <td>78</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>20220825 04</td>\n","      <td>21.8</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>77</td>\n","      <td>건물기타</td>\n","      <td>110634.0</td>\n","      <td>39570.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08872abc-c62c-4213-bcea-d620c00aa7ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-08872abc-c62c-4213-bcea-d620c00aa7ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-08872abc-c62c-4213-bcea-d620c00aa7ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e2b2b350-653a-4246-b9c0-ab0fdf662fb5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2b2b350-653a-4246-b9c0-ab0fdf662fb5')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e2b2b350-653a-4246-b9c0-ab0fdf662fb5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# 면적 제거\n","train_df = train_df.drop(columns=['area', 'cooling_area'])\n","test_df = test_df.drop(columns=['area', 'cooling_area'])"],"metadata":{"id":"pJKenwL4l72X","executionInfo":{"status":"ok","timestamp":1692683685557,"user_tz":-540,"elapsed":132,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# 강수랑, 일조, 일사, 풍속 결측치 0.0으로 채우기\n","train_df['pred'] = train_df['pred'].fillna(0.0)\n","train_df['sunshine'] = train_df['sunshine'].fillna(0.0)\n","train_df['solar_rad'] = train_df['solar_rad'].fillna(0.0)\n","train_df['wind'] = train_df['wind'].fillna(0.0)"],"metadata":{"id":"8ruxJxMzUEJu","executionInfo":{"status":"ok","timestamp":1692683685558,"user_tz":-540,"elapsed":132,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["# 결측치 처리\n","mask = train_df['building_num'] == 9\n","train_df.loc[mask, 'hum'] = train_df['hum'][mask].interpolate()\n","\n","mask = train_df['building_num'] == 15\n","train_df.loc[mask, 'hum'] = train_df['hum'][mask].interpolate()\n","\n","mask = train_df['building_num'] == 87\n","train_df.loc[mask, 'hum'] = train_df['hum'][mask].interpolate()\n","\n","mask = train_df['building_num'] == 90\n","train_df.loc[mask, 'hum'] = train_df['hum'][mask].interpolate()\n","\n","mask = train_df['building_num'] == 100\n","train_df.loc[mask, 'hum'] = train_df['hum'][mask].interpolate()"],"metadata":{"id":"p0_BAKZibiWr","executionInfo":{"status":"ok","timestamp":1692683685559,"user_tz":-540,"elapsed":133,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":25,"outputs":[]},{"cell_type":"markdown","source":["## 노이즈 제거"],"metadata":{"id":"_vmOm9Iql0vS"}},{"cell_type":"code","source":["check_df = train_df[['date_time', 'power']]\n","check_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"XbMZXGRwjGFp","executionInfo":{"status":"ok","timestamp":1692683685563,"user_tz":-540,"elapsed":137,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"a41dc04c-2c08-4323-996f-c8e613ba3307"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          date_time    power\n","0       20220601 00  1085.28\n","1       20220601 01  1047.36\n","2       20220601 02   974.88\n","3       20220601 03   953.76\n","4       20220601 04   986.40\n","...             ...      ...\n","203995  20220824 19   881.04\n","203996  20220824 20   798.96\n","203997  20220824 21   825.12\n","203998  20220824 22   640.08\n","203999  20220824 23   540.24\n","\n","[204000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-50bee7d6-9fd8-437a-adf9-982f7d69b0e7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date_time</th>\n","      <th>power</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20220601 00</td>\n","      <td>1085.28</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20220601 01</td>\n","      <td>1047.36</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20220601 02</td>\n","      <td>974.88</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20220601 03</td>\n","      <td>953.76</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20220601 04</td>\n","      <td>986.40</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>203995</th>\n","      <td>20220824 19</td>\n","      <td>881.04</td>\n","    </tr>\n","    <tr>\n","      <th>203996</th>\n","      <td>20220824 20</td>\n","      <td>798.96</td>\n","    </tr>\n","    <tr>\n","      <th>203997</th>\n","      <td>20220824 21</td>\n","      <td>825.12</td>\n","    </tr>\n","    <tr>\n","      <th>203998</th>\n","      <td>20220824 22</td>\n","      <td>640.08</td>\n","    </tr>\n","    <tr>\n","      <th>203999</th>\n","      <td>20220824 23</td>\n","      <td>540.24</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>204000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50bee7d6-9fd8-437a-adf9-982f7d69b0e7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50bee7d6-9fd8-437a-adf9-982f7d69b0e7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50bee7d6-9fd8-437a-adf9-982f7d69b0e7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e59e0943-61b8-4c70-bd08-76a643487a95\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e59e0943-61b8-4c70-bd08-76a643487a95')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e59e0943-61b8-4c70-bd08-76a643487a95 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# 5일치\n","window_size = 840\n","rolling_average = check_df['power'].rolling(window=window_size).mean()"],"metadata":{"id":"UeYl3XDDhkdQ","executionInfo":{"status":"ok","timestamp":1692683685564,"user_tz":-540,"elapsed":136,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","plt.plot(check_df.index, check_df['power'], label='raw data', alpha=0.5)\n","plt.plot(rolling_average.index, rolling_average, label=f'{window_size / 168}-days rolling_average')\n","plt.legend()\n","plt.title('frequency data and rolling_average')\n","plt.xlabel('date_time')\n","plt.ylabel('data')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"YEVHzTxIh0Q8","executionInfo":{"status":"ok","timestamp":1692683686499,"user_tz":-540,"elapsed":1071,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"973badda-3d2d-4bc5-be4a-f8458bd380bb"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["pd.DataFrame(rolling_average).isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tvkvMNOoh0Li","executionInfo":{"status":"ok","timestamp":1692683686503,"user_tz":-540,"elapsed":114,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"e72d5aec-e547-4d31-8e56-0f64c6e60c96"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["power    839\n","dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["# 5시간치\n","window_size = 5\n","rolling_average = check_df['power'].rolling(window=window_size).mean()"],"metadata":{"id":"fE2bxX46hkWb","executionInfo":{"status":"ok","timestamp":1692683686504,"user_tz":-540,"elapsed":105,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","plt.plot(check_df.index, check_df['power'], label='raw data', alpha=0.5)\n","plt.plot(rolling_average.index, rolling_average, label=f'{window_size / 168}-days rolling_average')\n","plt.legend()\n","plt.title('frequency data and rolling_average')\n","plt.xlabel('date_time')\n","plt.ylabel('data')\n","plt.show()"],"metadata":{"id":"i9rBFRVXZESe","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1692683687150,"user_tz":-540,"elapsed":760,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"dc8651a3-d11d-4700-f0e9-bad98ad940ae"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 결론 : 5일치가 확실히 노이즈제거에 효과적"],"metadata":{"id":"_JFdqvt4lwoj"}},{"cell_type":"code","source":[],"metadata":{"id":"FqeIpfhFZEQe","executionInfo":{"status":"ok","timestamp":1692683687162,"user_tz":-540,"elapsed":46,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"jNvoqI3CZEOt","executionInfo":{"status":"ok","timestamp":1692683687164,"user_tz":-540,"elapsed":47,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"D3UTS-H4ZEMO","executionInfo":{"status":"ok","timestamp":1692683687165,"user_tz":-540,"elapsed":45,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["#시계열 특성을 학습에 반영하기 위해 일시를 월, 일, 시간으로 나눕니다\n","date = pd.to_datetime(train_df['date_time'])\n","train_df['time'] = date.dt.hour\n","train_df['day'] = date.dt.weekday\n","train_df['month'] = date.dt.month\n","train_df['week'] = date.dt.isocalendar().week\n","train_df['day_of_year'] = date.dt.dayofyear\n"],"metadata":{"id":"yZiNibJ8T82f","executionInfo":{"status":"ok","timestamp":1692683687166,"user_tz":-540,"elapsed":45,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["date = pd.to_datetime(test_df['date_time'])\n","test_df['time'] = date.dt.hour\n","test_df['day'] = date.dt.weekday\n","test_df['month'] = date.dt.month\n","test_df['week'] = date.dt.isocalendar().week\n","test_df['day_of_year'] = date.dt.dayofyear\n"],"metadata":{"id":"wYyIkNavU4sO","executionInfo":{"status":"ok","timestamp":1692683687169,"user_tz":-540,"elapsed":47,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["train_df['sin_time'] = np.sin(2*np.pi*train_df['time']/24)\n","train_df['cos_time'] = np.cos(2*np.pi*train_df['time']/24)\n","\n","test_df['sin_time'] = np.sin(2*np.pi*test_df['time']/24)\n","test_df['cos_time'] = np.cos(2*np.pi*test_df['time']/24)"],"metadata":{"id":"W8z9vanNYbbL","executionInfo":{"status":"ok","timestamp":1692683687170,"user_tz":-540,"elapsed":47,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["train_df['THI'] = 1.8*train_df['temp'] - 0.55*(1-train_df['hum']/100)*(1.8*train_df['temp']-26)+32\n","test_df['THI'] = 1.8*test_df['temp'] - 0.55*(1 - test_df['hum']/100)*(1.8*test_df['temp'] - 26)+32"],"metadata":{"id":"RUh5CEKmbr7j","executionInfo":{"status":"ok","timestamp":1692683687177,"user_tz":-540,"elapsed":53,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["train_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u9t2kDoLzmPA","executionInfo":{"status":"ok","timestamp":1692683687727,"user_tz":-540,"elapsed":602,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"fe2b442c-bdcc-42b3-eef3-c0a0356c646f"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 204000 entries, 0 to 203999\n","Data columns (total 18 columns):\n"," #   Column        Non-Null Count   Dtype  \n","---  ------        --------------   -----  \n"," 0   power         204000 non-null  float64\n"," 1   building_num  204000 non-null  int64  \n"," 2   date_time     204000 non-null  object \n"," 3   temp          204000 non-null  float64\n"," 4   pred          204000 non-null  float64\n"," 5   wind          204000 non-null  float64\n"," 6   hum           204000 non-null  float64\n"," 7   sunshine      204000 non-null  float64\n"," 8   solar_rad     204000 non-null  float64\n"," 9   type          204000 non-null  object \n"," 10  time          204000 non-null  int64  \n"," 11  day           204000 non-null  int64  \n"," 12  month         204000 non-null  int64  \n"," 13  week          204000 non-null  UInt32 \n"," 14  day_of_year   204000 non-null  int64  \n"," 15  sin_time      204000 non-null  float64\n"," 16  cos_time      204000 non-null  float64\n"," 17  THI           204000 non-null  float64\n","dtypes: UInt32(1), float64(10), int64(5), object(2)\n","memory usage: 29.0+ MB\n"]}]},{"cell_type":"code","source":["test_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zY0li8VVzo-4","executionInfo":{"status":"ok","timestamp":1692683687729,"user_tz":-540,"elapsed":106,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"26a5bcd4-687e-4f4a-c331-324577db39c2"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 16800 entries, 0 to 16799\n","Data columns (total 15 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   building_num  16800 non-null  int64  \n"," 1   date_time     16800 non-null  object \n"," 2   temp          16800 non-null  float64\n"," 3   pred          16800 non-null  float64\n"," 4   wind          16800 non-null  float64\n"," 5   hum           16800 non-null  int64  \n"," 6   type          16800 non-null  object \n"," 7   time          16800 non-null  int64  \n"," 8   day           16800 non-null  int64  \n"," 9   month         16800 non-null  int64  \n"," 10  week          16800 non-null  UInt32 \n"," 11  day_of_year   16800 non-null  int64  \n"," 12  sin_time      16800 non-null  float64\n"," 13  cos_time      16800 non-null  float64\n"," 14  THI           16800 non-null  float64\n","dtypes: UInt32(1), float64(6), int64(6), object(2)\n","memory usage: 2.0+ MB\n"]}]},{"cell_type":"code","source":["train_df['week'] = train_df['week'].astype(int)\n","test_df['week'] = test_df['week'].astype(int)"],"metadata":{"id":"2CWyO_E5zsjv","executionInfo":{"status":"ok","timestamp":1692683687736,"user_tz":-540,"elapsed":107,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["train_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"QkQYkeCufcdI","executionInfo":{"status":"ok","timestamp":1692683687740,"user_tz":-540,"elapsed":110,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"1c0545a4-440a-41d0-8300-e9b5133a15d4"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          power  building_num    date_time  temp  pred  wind   hum  sunshine  \\\n","0       1085.28             1  20220601 00  18.6   0.0   0.9  42.0       0.0   \n","1       1047.36             1  20220601 01  18.0   0.0   1.1  45.0       0.0   \n","2        974.88             1  20220601 02  17.7   0.0   1.5  45.0       0.0   \n","3        953.76             1  20220601 03  16.7   0.0   1.4  48.0       0.0   \n","4        986.40             1  20220601 04  18.4   0.0   2.8  43.0       0.0   \n","...         ...           ...          ...   ...   ...   ...   ...       ...   \n","203995   881.04           100  20220824 19  23.1   0.0   0.9  86.0       0.5   \n","203996   798.96           100  20220824 20  22.4   0.0   1.3  86.0       0.0   \n","203997   825.12           100  20220824 21  21.3   0.0   1.0  92.0       0.0   \n","203998   640.08           100  20220824 22  21.0   0.0   0.3  94.0       0.0   \n","203999   540.24           100  20220824 23  20.7   0.0   0.1  95.0       0.0   \n","\n","        solar_rad    type  time  day  month  week  day_of_year  sin_time  \\\n","0             0.0    건물기타     0    2      6    22          152  0.000000   \n","1             0.0    건물기타     1    2      6    22          152  0.258819   \n","2             0.0    건물기타     2    2      6    22          152  0.500000   \n","3             0.0    건물기타     3    2      6    22          152  0.707107   \n","4             0.0    건물기타     4    2      6    22          152  0.866025   \n","...           ...     ...   ...  ...    ...   ...          ...       ...   \n","203995        0.0  호텔및리조트    19    2      8    34          236 -0.965926   \n","203996        0.0  호텔및리조트    20    2      8    34          236 -0.866025   \n","203997        0.0  호텔및리조트    21    2      8    34          236 -0.707107   \n","203998        0.0  호텔및리조트    22    2      8    34          236 -0.500000   \n","203999        0.0  호텔및리조트    23    2      8    34          236 -0.258819   \n","\n","        cos_time       THI  \n","0       1.000000  63.09388  \n","1       0.965926  62.46400  \n","2       0.866025  62.08735  \n","3       0.707107  60.89884  \n","4       0.500000  62.88788  \n","...          ...       ...  \n","203995  0.258819  72.38034  \n","203996  0.500000  71.21736  \n","203997  0.707107  69.79704  \n","203998  0.866025  69.41060  \n","203999  0.965926  68.95035  \n","\n","[204000 rows x 18 columns]"],"text/html":["\n","  <div id=\"df-620bb9a1-9a72-448f-946e-5ee6acf2a050\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>power</th>\n","      <th>building_num</th>\n","      <th>date_time</th>\n","      <th>temp</th>\n","      <th>pred</th>\n","      <th>wind</th>\n","      <th>hum</th>\n","      <th>sunshine</th>\n","      <th>solar_rad</th>\n","      <th>type</th>\n","      <th>time</th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>week</th>\n","      <th>day_of_year</th>\n","      <th>sin_time</th>\n","      <th>cos_time</th>\n","      <th>THI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1085.28</td>\n","      <td>1</td>\n","      <td>20220601 00</td>\n","      <td>18.6</td>\n","      <td>0.0</td>\n","      <td>0.9</td>\n","      <td>42.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>건물기타</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>22</td>\n","      <td>152</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>63.09388</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1047.36</td>\n","      <td>1</td>\n","      <td>20220601 01</td>\n","      <td>18.0</td>\n","      <td>0.0</td>\n","      <td>1.1</td>\n","      <td>45.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>건물기타</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>22</td>\n","      <td>152</td>\n","      <td>0.258819</td>\n","      <td>0.965926</td>\n","      <td>62.46400</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>974.88</td>\n","      <td>1</td>\n","      <td>20220601 02</td>\n","      <td>17.7</td>\n","      <td>0.0</td>\n","      <td>1.5</td>\n","      <td>45.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>건물기타</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>22</td>\n","      <td>152</td>\n","      <td>0.500000</td>\n","      <td>0.866025</td>\n","      <td>62.08735</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>953.76</td>\n","      <td>1</td>\n","      <td>20220601 03</td>\n","      <td>16.7</td>\n","      <td>0.0</td>\n","      <td>1.4</td>\n","      <td>48.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>건물기타</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>22</td>\n","      <td>152</td>\n","      <td>0.707107</td>\n","      <td>0.707107</td>\n","      <td>60.89884</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>986.40</td>\n","      <td>1</td>\n","      <td>20220601 04</td>\n","      <td>18.4</td>\n","      <td>0.0</td>\n","      <td>2.8</td>\n","      <td>43.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>건물기타</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>22</td>\n","      <td>152</td>\n","      <td>0.866025</td>\n","      <td>0.500000</td>\n","      <td>62.88788</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>203995</th>\n","      <td>881.04</td>\n","      <td>100</td>\n","      <td>20220824 19</td>\n","      <td>23.1</td>\n","      <td>0.0</td>\n","      <td>0.9</td>\n","      <td>86.0</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>호텔및리조트</td>\n","      <td>19</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>34</td>\n","      <td>236</td>\n","      <td>-0.965926</td>\n","      <td>0.258819</td>\n","      <td>72.38034</td>\n","    </tr>\n","    <tr>\n","      <th>203996</th>\n","      <td>798.96</td>\n","      <td>100</td>\n","      <td>20220824 20</td>\n","      <td>22.4</td>\n","      <td>0.0</td>\n","      <td>1.3</td>\n","      <td>86.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>호텔및리조트</td>\n","      <td>20</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>34</td>\n","      <td>236</td>\n","      <td>-0.866025</td>\n","      <td>0.500000</td>\n","      <td>71.21736</td>\n","    </tr>\n","    <tr>\n","      <th>203997</th>\n","      <td>825.12</td>\n","      <td>100</td>\n","      <td>20220824 21</td>\n","      <td>21.3</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>92.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>호텔및리조트</td>\n","      <td>21</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>34</td>\n","      <td>236</td>\n","      <td>-0.707107</td>\n","      <td>0.707107</td>\n","      <td>69.79704</td>\n","    </tr>\n","    <tr>\n","      <th>203998</th>\n","      <td>640.08</td>\n","      <td>100</td>\n","      <td>20220824 22</td>\n","      <td>21.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>94.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>호텔및리조트</td>\n","      <td>22</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>34</td>\n","      <td>236</td>\n","      <td>-0.500000</td>\n","      <td>0.866025</td>\n","      <td>69.41060</td>\n","    </tr>\n","    <tr>\n","      <th>203999</th>\n","      <td>540.24</td>\n","      <td>100</td>\n","      <td>20220824 23</td>\n","      <td>20.7</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>95.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>호텔및리조트</td>\n","      <td>23</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>34</td>\n","      <td>236</td>\n","      <td>-0.258819</td>\n","      <td>0.965926</td>\n","      <td>68.95035</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>204000 rows × 18 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-620bb9a1-9a72-448f-946e-5ee6acf2a050')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-620bb9a1-9a72-448f-946e-5ee6acf2a050 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-620bb9a1-9a72-448f-946e-5ee6acf2a050');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9b6da066-3cfb-41d3-a0ee-711fc3b07c96\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b6da066-3cfb-41d3-a0ee-711fc3b07c96')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9b6da066-3cfb-41d3-a0ee-711fc3b07c96 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# 냉방면적 비율 추가\n","\n","train_df['cooling_ratio'] = train_df['cooling_area'] / train_df['area']\n","\n","test_df['cooling_ratio'] = test_df['cooling_area'] / test_df['area']"],"metadata":{"id":"yReDp_PvW_v7","colab":{"base_uri":"https://localhost:8080/","height":512},"executionInfo":{"status":"error","timestamp":1692683756230,"user_tz":-540,"elapsed":345,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"64394126-e9e0-4cfd-ab3e-3cef3200e8e3"},"execution_count":41,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'cooling_area'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-41-420a9c470eed>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 냉방면적 비율 추가\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mtrain_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cooling_ratio'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cooling_area'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mtrain_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'area'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mtest_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cooling_ratio'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtest_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cooling_area'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mtest_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'area'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3805\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3807\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3808\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3809\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'cooling_area'"]}]},{"cell_type":"code","source":["# 체감온도 변수 추가\n","def wet_temp(temp, hum):\n","    tw = temp*np.arctan(0.151977*(hum + 8.313659)*0.5) + np.arctan(temp + hum) - np.arctan(hum - 1.67633) + 0.00391838*1.5*np.arctan(0.023101*hum) - 4.686035\n","    return tw\n","\n","def feels_temp(temp, hum):\n","    tw = wet_temp(temp, hum)\n","    ft = -0.2442 + 0.55399*tw + 0.45535*temp - 0.0022*(tw**2) + 0.00278*tw*temp + 3.0\n","    return ft"],"metadata":{"id":"e2JNPDFfW_tx","executionInfo":{"status":"ok","timestamp":1692683873919,"user_tz":-540,"elapsed":332,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["train_df['feels_temp'] = feels_temp(train_df['temp'], train_df['hum'])\n","\n","test_df['feels_temp'] = feels_temp(test_df['temp'], test_df['hum'])"],"metadata":{"id":"Yfw9etGYW_rq","executionInfo":{"status":"ok","timestamp":1692683881927,"user_tz":-540,"elapsed":470,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["# cdh(cooling degree hour) 변수 추가\n","def CDH(xs):\n","    ys = []\n","    for i in range(len(xs)):\n","        if i < 11:\n","            ys.append(np.sum(xs[:(i+1)]-26))\n","        else:\n","            ys.append(np.sum(xs[(i-11):(i+1)]-26))\n","    return np.array(ys)"],"metadata":{"id":"UW-sNbMuW_pZ","executionInfo":{"status":"ok","timestamp":1692683882364,"user_tz":-540,"elapsed":15,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["cdhs = np.array([])\n","for num in range(1,37):\n","    temp = train_df[train_df['building_num'] == num]\n","    cdh = CDH(temp['temp'].values)\n","    cdhs = np.concatenate([cdhs, cdh])\n","train_df['CDH'] = cdhs\n","\n","cdhs = np.array([])\n","for num in range(1,37):\n","    temp = test_df[test_df['building_num'] == num]\n","    cdh = CDH(temp['temp'].values)\n","    cdhs = np.concatenate([cdhs, cdh])\n","test_df['CDH'] = cdhs"],"metadata":{"id":"5E8TfcfoXQ_H","colab":{"base_uri":"https://localhost:8080/","height":391},"executionInfo":{"status":"error","timestamp":1692683882804,"user_tz":-540,"elapsed":455,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}},"outputId":"890c5c4d-4696-4a01-9f5b-e1c72104b1d2"},"execution_count":46,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-46-03d2d364ed58>\u001b[0m in \u001b[0;36m<cell line: 6>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mcdh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCDH\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtemp\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'temp'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mcdhs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcatenate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcdhs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcdh\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mtrain_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'CDH'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcdhs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mcdhs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   3978\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3979\u001b[0m             \u001b[0;31m# set column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3980\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3981\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3982\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_setitem_slice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_set_item\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   4172\u001b[0m         \u001b[0mensure\u001b[0m \u001b[0mhomogeneity\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4173\u001b[0m         \"\"\"\n\u001b[0;32m-> 4174\u001b[0;31m         \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sanitize_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4175\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4176\u001b[0m         if (\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_sanitize_column\u001b[0;34m(self, value)\u001b[0m\n\u001b[1;32m   4913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4914\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_list_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4915\u001b[0;31m             \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequire_length_match\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4916\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0msanitize_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_2d\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4917\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/common.py\u001b[0m in \u001b[0;36mrequire_length_match\u001b[0;34m(data, index)\u001b[0m\n\u001b[1;32m    569\u001b[0m     \"\"\"\n\u001b[1;32m    570\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 571\u001b[0;31m         raise ValueError(\n\u001b[0m\u001b[1;32m    572\u001b[0m             \u001b[0;34m\"Length of values \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    573\u001b[0m             \u001b[0;34mf\"({len(data)}) \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Length of values (73440) does not match length of index (204000)"]}]},{"cell_type":"code","source":["# 6월 1일 삭제 --> day_of_year == 152\n","mask_train = train_df['day_of_year'] != 152\n","train_df = train_df[mask_train]"],"metadata":{"id":"8K2i3cwSXZkl","executionInfo":{"status":"aborted","timestamp":1692683882805,"user_tz":-540,"elapsed":100,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 시간별 전력량 평균 추가\n","power_hour_mean = train_df.groupby(['building_num', 'time'])['power'].mean().reset_index()\n","train_df['hour_mean'] = train_df.apply(lambda x :power_hour_mean.loc[(power_hour_mean.building_num == x['building_num']) & (power_hour_mean.time == x['time']), 'power'].values[0], axis=1)\n","test_df['hour_mean'] = test_df.apply(lambda x :power_hour_mean.loc[(power_hour_mean.building_num == x['building_num']) & (power_hour_mean.time == x['time']), 'power'].values[0], axis=1)"],"metadata":{"id":"rOIMPmKMXgSN","executionInfo":{"status":"aborted","timestamp":1692683882805,"user_tz":-540,"elapsed":100,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df.to_csv(f'{DATA_PATH}train_ver1.csv', index=False)\n","test_df.to_csv(f'{DATA_PATH}test_ver1.csv', index=False)"],"metadata":{"id":"reOBHBMxft06","executionInfo":{"status":"aborted","timestamp":1692683882806,"user_tz":-540,"elapsed":101,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"}}},"execution_count":null,"outputs":[]}]}