{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10384,"status":"ok","timestamp":1693121059215,"user":{"displayName":"Yeseul Ryu","userId":"01398576250166115600"},"user_tz":-540},"id":"PSz3sTiryRy7","outputId":"9e059943-8bd6-434a-c2b8-693836bab24c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting sktime\n","  Downloading sktime-0.22.0-py3-none-any.whl (17.5 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m17.5/17.5 MB\u001b[0m \u001b[31m44.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy\u003c1.26,\u003e=1.21.0 in /usr/local/lib/python3.10/dist-packages (from sktime) (1.23.5)\n","Requirement already satisfied: pandas\u003c2.1.0,\u003e=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sktime) (1.5.3)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from sktime) (23.1)\n","Collecting scikit-base\u003c0.6.0 (from sktime)\n","  Downloading scikit_base-0.5.1-py3-none-any.whl (118 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m118.7/118.7 kB\u001b[0m \u001b[31m15.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: scikit-learn\u003c1.4.0,\u003e=0.24.0 in /usr/local/lib/python3.10/dist-packages (from sktime) (1.2.2)\n","Requirement already satisfied: scipy\u003c2.0.0,\u003e=1.2.0 in /usr/local/lib/python3.10/dist-packages (from sktime) (1.10.1)\n","Requirement already satisfied: python-dateutil\u003e=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas\u003c2.1.0,\u003e=1.1.0-\u003esktime) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas\u003c2.1.0,\u003e=1.1.0-\u003esktime) (2023.3)\n","Requirement already satisfied: joblib\u003e=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn\u003c1.4.0,\u003e=0.24.0-\u003esktime) (1.3.2)\n","Requirement already satisfied: threadpoolctl\u003e=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn\u003c1.4.0,\u003e=0.24.0-\u003esktime) (3.2.0)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.1-\u003epandas\u003c2.1.0,\u003e=1.1.0-\u003esktime) (1.16.0)\n","Installing collected packages: scikit-base, sktime\n","Successfully installed scikit-base-0.5.1 sktime-0.22.0\n"]}],"source":["!pip install sktime"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W_JBHIlAyUdh"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7ccq0qybye-L"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import torch\n","from tqdm.auto import tqdm\n","import random\n","import os\n","\n","def reset_seeds(seed):\n","    random.seed(seed)\n","    os.environ['PYTHONHASHSEED'] = str(seed)\n","    np.random.seed(seed)\n","    torch.manual_seed(seed)\n","    torch.cuda.manual_seed(seed)\n","    torch.backends.cudnn.deterministic = True\n","\n","DATA_PATH = '/content/drive/MyDrive/데이콘 캐글 컴페티션/DACON_23.07_PowerConsumption/'\n","SEED = 42\n","\n","device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","device"]},{"cell_type":"markdown","metadata":{"id":"31ydcG9eI6T2"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E2N_ZCWUyh-c"},"outputs":[],"source":["from lightgbm import LGBMRegressor\n","from xgboost import XGBRegressor\n","import sktime\n","from sktime.forecasting.model_selection import temporal_train_test_split\n","from sktime.utils.plotting import plot_series\n","import matplotlib.pyplot as pl24\n","from sklearn.metrics import make_scorer\n","from lightgbm import early_stopping\n","import xgboost as xgb\n","import seaborn as sns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W71dMj5NzRml"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"r28wUi6RyjIz"},"outputs":[],"source":["def _smape(true, pred):\n","    true = np.array(true)\n","    pred = np.array(pred)\n","    v = 2 * np.abs(pred - true) / (np.abs(pred) + np.abs(true))\n","    output = np.mean(v) * 100\n","    return output\n","smape = make_scorer(_smape, greater_is_better=False)\n","\n","\n","def lightgbm_smape(y_true, y_pred):\n","    smape_val = _smape(y_true, y_pred)\n","    return 'SMAPE', smape_val, False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"r7bqKOFaynfK"},"outputs":[],"source":["train = pd.read_csv(f\"{DATA_PATH}train.csv\")\n","test = pd.read_csv(f\"{DATA_PATH}test.csv\")\n","# building = pd.read_csv(f\"{DATA_PATH}building_info.csv\")\n","submission = pd.read_csv(f\"{DATA_PATH}sample_submission.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GX-hhCQTXXJG"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qqlz4mT8XXuN"},"outputs":[],"source":["\n","# train_ft = pd.read_csv(f'{DATA_PATH}train_ver3.csv')\n","# test_ft = pd.read_csv(f'{DATA_PATH}test_ver3.csv')\n","\n","train_ft = pd.read_csv(f'{DATA_PATH}train_features_ys_rm.csv')\n","test_ft = pd.read_csv(f'{DATA_PATH}test_features_ys_rm.csv')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TXKKjmDbXXuO"},"outputs":[],"source":["train_ft.shape, test_ft.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Jj7Bo3w-RrU2"},"outputs":[],"source":["train_ft.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hUgZl5OlRvh8"},"outputs":[],"source":["test_ft.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"09iNJ1BLXXuR"},"outputs":[],"source":["train_ft.columns\n","\n","cols = ['energy_consum', 'building_num', 'date_time', 'temp', 'precip', 'wind', 'hum',\n","       'sunshine', 'solar_rad', 'building_type', 'time', 'day', 'month', 'week',\n","       'day_of_year', 'sin_time', 'cos_time', 'temp_RM', 'wind_RM', 'hum_RM',\n","       'temp_EMA', 'wind_EMA', 'hum_EMA', 'THI', 'feels_temp', 'CDH',\n","       'hour_mean', 'day_hour_mean', 'hour_std', 'heat_index', 'heat_wave',\n","        'temp_2', 'avg_power_change_rate_7d', 'avg_power_change_rate_24h']\n","\n","\n","train_ft.columns = cols"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GA0aJbiJXXuR"},"outputs":[],"source":["test_ft.columns\n","\n","cols = ['building_num', 'date_time', 'temp', 'precip', 'wind', 'hum', 'building_type',\n","       'time', 'day', 'month', 'week', 'day_of_year', 'sin_time', 'cos_time',\n","       'temp_RM', 'wind_RM', 'hum_RM', 'temp_EMA', 'wind_EMA', 'hum_EMA',\n","       'THI', 'feels_temp', 'CDH', 'hour_mean', 'day_hour_mean', 'hour_std',\n","       'heat_index', 'heat_wave',\n","        'temp_2', 'avg_power_change_rate_7d', 'avg_power_change_rate_24h']\n","\n","test_ft.columns = cols"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H_z7BP6XXXuR"},"outputs":[],"source":["train_ft.isna().sum().sum(), test_ft.isna().sum().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UtB3hmJkXXuT"},"outputs":[],"source":["train_ft.shape, test_ft.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HwIKVzLdXXuV"},"outputs":[],"source":["cols = ['sunshine', 'solar_rad']\n","train_ft = train_ft.drop(columns=cols)"]},{"cell_type":"markdown","metadata":{"id":"mmaUiFXT_aTO"},"source":["## 건물별 ft생성"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NJmXPzF9yvQt"},"outputs":[],"source":["for i in range(1, 101):\n","    globals()[f'train_ft_{i}'] = train_ft[train_ft['building_num'] == i]\n","\n","for i in range(1, 101):\n","    globals()[f'test_ft_{i}'] = test_ft[test_ft['building_num'] == i]"]},{"cell_type":"markdown","metadata":{"id":"ToX2Vn88CDSK"},"source":["## 공휴일 반영"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-AA9_cYDA3vz"},"outputs":[],"source":["# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_1['weekend'] = train_ft_1['day'].isin([6]) + 0\n","test_ft_1['weekend'] = test_ft_1['day'].isin([6]) + 0\n","\n","mask = train_ft_1['day_of_year'] == 157\n","train_ft_1.loc[mask, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_2['weekend'] = train_ft_2['day'].isin([0]) + 0\n","test_ft_2['weekend'] = test_ft_2['day'].isin([0]) + 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_3['weekend'] = train_ft_3['day'].isin([0]) + 0\n","test_ft_3['weekend'] = test_ft_3['day'].isin([0]) + 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_5['weekend'] = train_ft_5['day'].isin([0, 1, 2, 3]) + 0\n","test_ft_5['weekend'] = test_ft_5['day'].isin([0, 1, 2, 3]) + 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_6['weekend'] = 0\n","test_ft_6['weekend'] = 0\n","\n","mask_train = (train_ft_6['day_of_year'] == 163) | (train_ft_6['day_of_year'] == 177)| (train_ft_6['day_of_year'] == 191)| (train_ft_6['day_of_year'] == 205)| (train_ft_6['day_of_year'] == 226)\n","train_ft_6.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_6['day_of_year'] == 240\n","test_ft_6.loc[mask_test, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_7['weekend'] = train_ft_7['day'].isin([5, 6]) + 0\n","test_ft_7['weekend'] = test_ft_7['day'].isin([5, 6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_8['weekend'] = train_ft_8['day'].isin([6]) + 0\n","test_ft_8['weekend'] = test_ft_8['day'].isin([6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_9['weekend'] = 0\n","test_ft_9['weekend'] = 0\n","\n","mask_train = (train_ft_9['day_of_year'] == 163) | (train_ft_9['day_of_year'] == 177)| (train_ft_9['day_of_year'] == 191)| (train_ft_9['day_of_year'] == 205)| (train_ft_9['day_of_year'] == 226)\n","train_ft_9.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_9['day_of_year'] == 240\n","test_ft_9.loc[mask_test, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_12['weekend'] = train_ft_12['day'].isin([6]) + 0\n","test_ft_12['weekend'] = test_ft_12['day'].isin([6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_14['weekend'] = train_ft_14['day'].isin([5,6]) + 0\n","test_ft_14['weekend'] = test_ft_14['day'].isin([5,6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_15['weekend'] = train_ft_15['day'].isin([5,6]) + 0\n","test_ft_15['weekend'] = test_ft_15['day'].isin([5,6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_16['weekend'] = train_ft_16['day'].isin([5, 6]) + 0\n","test_ft_16['weekend'] = test_ft_16['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_16['day_of_year'] == 157) | (train_ft_16['day_of_year'] == 227)\n","train_ft_16.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_17['weekend'] = train_ft_17['day'].isin([5, 6]) + 0\n","test_ft_17['weekend'] = test_ft_17['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_17['day_of_year'] == 157) | (train_ft_17['day_of_year'] == 227)\n","train_ft_17.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_18['weekend'] = train_ft_18['day'].isin([5, 6]) + 0\n","test_ft_18['weekend'] = test_ft_18['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_18['day_of_year'] == 157) | (train_ft_18['day_of_year'] == 227)\n","train_ft_18.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_19['weekend'] = train_ft_19['day'].isin([5, 6]) + 0\n","test_ft_19['weekend'] = test_ft_19['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_19['day_of_year'] == 157) | (train_ft_19['day_of_year'] == 227)\n","train_ft_19.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_20['weekend'] = train_ft_20['day'].isin([5, 6]) + 0\n","\n","test_ft_20['weekend'] = test_ft_20['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_20['day_of_year'] == 157) | (train_ft_20['day_of_year'] == 227)\n","train_ft_20.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_21['weekend'] = train_ft_21['day'].isin([5, 6]) + 0\n","test_ft_21['weekend'] = test_ft_21['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_21['day_of_year'] == 157) | (train_ft_21['day_of_year'] == 227)\n","train_ft_21.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_22['weekend'] = train_ft_22['day'].isin([5, 6]) + 0\n","test_ft_22['weekend'] = test_ft_22['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_22['day_of_year'] == 157) | (train_ft_22['day_of_year'] == 227)\n","train_ft_22.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_23['weekend'] = train_ft_23['day'].isin([5, 6]) + 0\n","test_ft_23['weekend'] = test_ft_23['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_23['day_of_year'] == 157) | (train_ft_23['day_of_year'] == 227)\n","train_ft_23.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_24['weekend'] = train_ft_24['day'].isin([5, 6]) + 0\n","test_ft_24['weekend'] = test_ft_24['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_24['day_of_year'] == 157) | (train_ft_24['day_of_year'] == 227)\n","train_ft_24.loc[mask, 'weekend'] = 1\n","\n","# 휴무일 지정(0: 영업일, 1: 휴무일)\n","train_ft_25['weekend'] = (train_ft_25['day'] == 0) + 0\n","test_ft_25['weekend'] = (test_ft_25['day'] == 0) + 0\n","\n","# 8월 16일, 8월 17일 휴무일로 예상.\n","mask = (train_ft_25['day_of_year'] == 228) | (train_ft_25['day_of_year'] == 229)\n","train_ft_25.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_26['weekend'] = train_ft_26['day'].isin([5, 6]) + 0\n","test_ft_26['weekend'] = test_ft_26['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_26['day_of_year'] == 157) | (train_ft_26['day_of_year'] == 227)\n","train_ft_26.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_27['weekend'] = train_ft_27['day'].isin([5, 6]) + 0\n","test_ft_27['weekend'] = test_ft_27['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_27['day_of_year'] == 157) | (train_ft_27['day_of_year'] == 227)\n","train_ft_27.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_28['weekend'] = train_ft_28['day'].isin([5, 6]) + 0\n","test_ft_28['weekend'] = test_ft_28['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_28['day_of_year'] == 157) | (train_ft_28['day_of_year'] == 227)\n","train_ft_28.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_29['weekend'] = train_ft_29['day'].isin([5, 6]) + 0\n","test_ft_29['weekend'] = test_ft_29['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_29['day_of_year'] == 157) | (train_ft_29['day_of_year'] == 227)\n","train_ft_29.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_30['weekend'] = train_ft_30['day'].isin([5, 6]) + 0\n","test_ft_30['weekend'] = test_ft_30['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_30['day_of_year'] == 157) | (train_ft_30['day_of_year'] == 227)\n","train_ft_30.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_31['weekend'] = train_ft_31['day'].isin([5, 6]) + 0\n","test_ft_31['weekend'] = test_ft_31['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_31['day_of_year'] == 157) | (train_ft_31['day_of_year'] == 227)\n","train_ft_31.loc[mask, 'weekend'] = 1\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"niEJ2x1lBNGh"},"outputs":[],"source":["# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_37['closed'] = 0\n","mask = (train_ft_37['day_of_year'] == 171) | (train_ft_37['day_of_year'] == 192) | (train_ft_37['day_of_year'] == 220)\n","train_ft_37.loc[mask, 'closed'] = 1\n","\n","test_ft_37['closed'] = 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_38['closed'] = 0\n","mask = (train_ft_38['day_of_year'] == 164) | (train_ft_38['day_of_year'] == 206) | (train_ft_38['day_of_year'] == 213)\n","train_ft_38.loc[mask, 'closed'] = 1\n","\n","test_ft_38['closed'] = 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_39['closed'] = 0\n","mask = (train_ft_39['day_of_year'] == 199) | (train_ft_39['day_of_year'] == 220)\n","train_ft_39.loc[mask, 'closed'] = 1\n","\n","test_ft_39['closed'] = 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_40['closed'] = 0\n","mask = (train_ft_40['day_of_year'] == 171) | (train_ft_40['day_of_year'] == 199) | (train_ft_40['day_of_year'] == 220)\n","train_ft_40.loc[mask, 'closed'] = 1\n","\n","test_ft_40['closed'] = 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_41['closed'] = 0\n","mask = (train_ft_41['day_of_year'] == 178) | (train_ft_41['day_of_year'] == 206) | (train_ft_41['day_of_year'] == 220)\n","train_ft_41.loc[mask, 'closed'] = 1\n","\n","test_ft_41['closed'] = 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_41['weekend'] = train_ft_41['day'].isin([5, 6]) + 0\n","\n","test_ft_41['weekend'] = test_ft_41['day'].isin([5, 6]) + 0\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_42['closed'] = 0\n","mask = (train_ft_42['day_of_year'] == 164) | (train_ft_42['day_of_year'] == 192) | (train_ft_42['day_of_year'] == 234)\n","train_ft_42.loc[mask, 'closed'] = 1\n","\n","test_ft_42['closed'] = 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_43['weekend'] = train_ft_43['day'].isin([5, 6]) + 0\n","\n","test_ft_43['weekend'] = test_ft_43['day'].isin([5, 6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_44['weekend'] = train_ft_44['day'].isin([5, 6]) + 0\n","\n","test_ft_44['weekend'] = test_ft_44['day'].isin([5, 6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_45['weekend'] = train_ft_45['day'].isin([5, 6]) + 0\n","\n","test_ft_45['weekend'] = test_ft_45['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_45['day_of_year'] == 157) | (train_ft_45['day_of_year'] == 227)\n","train_ft_45.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_46['weekend'] = train_ft_46['day'].isin([5, 6]) + 0\n","\n","test_ft_46['weekend'] = test_ft_46['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_46['day_of_year'] == 157) | (train_ft_46['day_of_year'] == 227)\n","train_ft_46.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_47['weekend'] = train_ft_47['day'].isin([5, 6]) + 0\n","\n","test_ft_47['weekend'] = test_ft_47['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_47['day_of_year'] == 157) | (train_ft_47['day_of_year'] == 227)\n","train_ft_47.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_48['weekend'] = train_ft_48['day'].isin([5, 6]) + 0\n","\n","test_ft_48['weekend'] = test_ft_48['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_48['day_of_year'] == 157) | (train_ft_48['day_of_year'] == 227)\n","train_ft_48.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_49['weekend'] = train_ft_49['day'].isin([5, 6]) + 0\n","\n","test_ft_49['weekend'] = test_ft_49['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_49['day_of_year'] == 157) | (train_ft_49['day_of_year'] == 227)\n","train_ft_49.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_50['weekend'] = train_ft_50['day'].isin([5, 6]) + 0\n","\n","test_ft_50['weekend'] = test_ft_50['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_50['day_of_year'] == 157) | (train_ft_50['day_of_year'] == 227)\n","train_ft_50.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_51['weekend'] = train_ft_51['day'].isin([5, 6]) + 0\n","\n","test_ft_51['weekend'] = test_ft_51['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_51['day_of_year'] == 157) | (train_ft_51['day_of_year'] == 227)\n","train_ft_51.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_52['weekend'] = train_ft_52['day'].isin([5, 6]) + 0\n","\n","test_ft_52['weekend'] = test_ft_52['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_52['day_of_year'] == 157) | (train_ft_52['day_of_year'] == 227)\n","train_ft_52.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_53['weekend'] = train_ft_53['day'].isin([5, 6]) + 0\n","\n","test_ft_53['weekend'] = test_ft_53['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_53['day_of_year'] == 157) | (train_ft_53['day_of_year'] == 227)\n","train_ft_53.loc[mask, 'weekend'] = 1\n","\n","# 휴무일 지정(0: 영업일, 1: 휴무일)\n","train_ft_54['weekend'] = (train_ft_54['day'] == 0) + 0\n","\n","test_ft_54['weekend'] = (test_ft_54['day'] == 0) + 0\n","\n","# 8월 16일, 8월 17일 휴무일로 예상.\n","mask = (train_ft_54['day_of_year'] == 228) | (train_ft_54['day_of_year'] == 229)\n","train_ft_54.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_55['weekend'] = train_ft_55['day'].isin([5, 6]) + 0\n","\n","test_ft_55['weekend'] = test_ft_55['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_55['day_of_year'] == 157) | (train_ft_55['day_of_year'] == 227)\n","train_ft_55.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_56['weekend'] = train_ft_56['day'].isin([5, 6]) + 0\n","\n","test_ft_56['weekend'] = test_ft_56['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_56['day_of_year'] == 157) | (train_ft_56['day_of_year'] == 227)\n","train_ft_56.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_57['weekend'] = train_ft_57['day'].isin([5, 6]) + 0\n","\n","test_ft_57['weekend'] = test_ft_57['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_57['day_of_year'] == 157) | (train_ft_57['day_of_year'] == 227)\n","train_ft_57.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_58['weekend'] = train_ft_58['day'].isin([5, 6]) + 0\n","\n","test_ft_58['weekend'] = test_ft_58['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_58['day_of_year'] == 157) | (train_ft_58['day_of_year'] == 227)\n","train_ft_58.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_59['weekend'] = train_ft_59['day'].isin([5, 6]) + 0\n","\n","test_ft_59['weekend'] = test_ft_59['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_59['day_of_year'] == 157) | (train_ft_59['day_of_year'] == 227)\n","train_ft_59.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_60['weekend'] = train_ft_60['day'].isin([5, 6]) + 0\n","\n","test_ft_60['weekend'] = test_ft_60['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_60['day_of_year'] == 157) | (train_ft_60['day_of_year'] == 227)\n","train_ft_60.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_61['weekend'] = train_ft_61['day'].isin([5, 6]) + 0\n","\n","test_ft_61['weekend'] = test_ft_61['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_61['day_of_year'] == 157) | (train_ft_61['day_of_year'] == 227)\n","train_ft_61.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_62['weekend'] = train_ft_62['day'].isin([5, 6]) + 0\n","\n","test_ft_62['weekend'] = test_ft_62['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_62['day_of_year'] == 157) | (train_ft_62['day_of_year'] == 227)\n","train_ft_62.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_63['weekend'] = train_ft_63['day'].isin([5, 6]) + 0\n","\n","test_ft_63['weekend'] = test_ft_63['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_63['day_of_year'] == 157) | (train_ft_63['day_of_year'] == 227)\n","train_ft_63.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_64['weekend'] = train_ft_64['day'].isin([5, 6]) + 0\n","\n","test_ft_64['weekend'] = test_ft_64['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_64['day_of_year'] == 157) | (train_ft_64['day_of_year'] == 227)\n","train_ft_64.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_65['weekend'] = train_ft_65['day'].isin([5, 6]) + 0\n","\n","test_ft_65['weekend'] = test_ft_65['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_65['day_of_year'] == 157) | (train_ft_65['day_of_year'] == 227)\n","train_ft_65.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_66['weekend'] = train_ft_66['day'].isin([5, 6]) + 0\n","\n","test_ft_66['weekend'] = test_ft_66['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_66['day_of_year'] == 157) | (train_ft_66['day_of_year'] == 227)\n","train_ft_66.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_67['weekend'] = train_ft_67['day'].isin([5, 6]) + 0\n","\n","test_ft_67['weekend'] = test_ft_67['day'].isin([5, 6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_67['weekend'] = train_ft_67['day'].isin([5, 6]) + 0\n","\n","test_ft_67['weekend'] = test_ft_67['day'].isin([5, 6]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_68['weekend'] = train_ft_68['day'].isin([5, 6]) + 0\n","\n","test_ft_68['weekend'] = test_ft_68['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_68['day_of_year'] == 157) | (train_ft_68['day_of_year'] == 227)\n","train_ft_68.loc[mask, 'weekend'] = 1\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t45GkuhT-p4H"},"outputs":[],"source":["# 주말 지정(0: 주중, 1: 주말)\n","train_ft_69['weekend'] = train_ft_69['day'].isin([5, 6]) + 0\n","test_ft_69['weekend'] = test_ft_69['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_69['day_of_year'] == 157) | (train_ft_69['day_of_year'] == 227)\n","train_ft_69.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_70['weekend'] = train_ft_70['day'].isin([5, 6]) + 0\n","test_ft_70['weekend'] = test_ft_70['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_70['day_of_year'] == 157) | (train_ft_70['day_of_year'] == 227)\n","train_ft_70.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_71['weekend'] = train_ft_71['day'].isin([5, 6]) + 0\n","test_ft_71['weekend'] = test_ft_71['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_71['day_of_year'] == 157) | (train_ft_71['day_of_year'] == 227)\n","train_ft_71.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_72['weekend'] = train_ft_72['day'].isin([5, 6]) + 0\n","test_ft_72['weekend'] = test_ft_72['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_72['day_of_year'] == 157) | (train_ft_72['day_of_year'] == 227)\n","train_ft_72.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_73['weekend'] = train_ft_73['day'].isin([5, 6]) + 0\n","test_ft_73['weekend'] = test_ft_73['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_73['day_of_year'] == 157) | (train_ft_73['day_of_year'] == 227)\n","train_ft_73.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_74['weekend'] = train_ft_74['day'].isin([5, 6]) + 0\n","test_ft_74['weekend'] = test_ft_74['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_74['day_of_year'] == 157) | (train_ft_74['day_of_year'] == 227)\n","train_ft_74.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_75['weekend'] = train_ft_75['day'].isin([5, 6, 0]) + 0\n","test_ft_75['weekend'] = test_ft_75['day'].isin([5, 6, 0]) + 0\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_76['weekend'] = train_ft_76['day'].isin([5, 6]) + 0\n","test_ft_76['weekend'] = test_ft_76['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_76['day_of_year'] == 157) | (train_ft_76['day_of_year'] == 227)\n","train_ft_76.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_77['weekend'] = train_ft_77['day'].isin([5, 6]) + 0\n","test_ft_77['weekend'] = test_ft_77['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_77['day_of_year'] == 157) | (train_ft_77['day_of_year'] == 227)\n","train_ft_77.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_78['weekend'] = train_ft_78['day'].isin([5, 6]) + 0\n","\n","test_ft_78['weekend'] = test_ft_78['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_78['day_of_year'] == 157) | (train_ft_78['day_of_year'] == 227)\n","train_ft_78.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_79['weekend'] = train_ft_79['day'].isin([5, 6]) + 0\n","\n","test_ft_79['weekend'] = test_ft_79['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_79['day_of_year'] == 157) | (train_ft_79['day_of_year'] == 227)\n","train_ft_79.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_80['weekend'] = train_ft_80['day'].isin([5, 6]) + 0\n","\n","test_ft_80['weekend'] = test_ft_80['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_80['day_of_year'] == 157) | (train_ft_80['day_of_year'] == 227)\n","train_ft_80.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_82['weekend'] = train_ft_82['day'].isin([5, 6]) + 0\n","test_ft_82['weekend'] = test_ft_82['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_82['day_of_year'] == 157) | (train_ft_82['day_of_year'] == 227)\n","train_ft_82.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_83['weekend'] = train_ft_83['day'].isin([5, 6]) + 0\n","\n","test_ft_83['weekend'] = test_ft_83['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_83['day_of_year'] == 157) | (train_ft_83['day_of_year'] == 227)\n","train_ft_83.loc[mask, 'weekend'] = 1\n","\n","# 주말 지정(0: 주중, 1: 주말)\n","train_ft_84['weekend'] = train_ft_84['day'].isin([5, 6]) + 0\n","test_ft_84['weekend'] = test_ft_84['day'].isin([5, 6]) + 0\n","\n","# 공휴일 주말로 지정(공휴일이 2일 밖에 존재하지 않으며, 주말과 차이가 없다고 판단)\n","mask = (train_ft_84['day_of_year'] == 157) | (train_ft_84['day_of_year'] == 227)\n","train_ft_84.loc[mask, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_86['weekend'] = 0\n","test_ft_86['weekend'] = 0\n","\n","mask_train = (train_ft_86['day_of_year'] == 161) | (train_ft_86['day_of_year'] == 177)| (train_ft_86['day_of_year'] == 191)| (train_ft_86['day_of_year'] == 205)| (train_ft_86['day_of_year'] == 222)\n","train_ft_86.loc[mask_train, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_87['weekend'] = 0\n","test_ft_87['weekend'] = 0\n","\n","mask_train = (train_ft_87['day_of_year'] == 163) | (train_ft_87['day_of_year'] == 177)| (train_ft_87['day_of_year'] == 191)| (train_ft_87['day_of_year'] == 205)| (train_ft_87['day_of_year'] == 226)\n","train_ft_87.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_87['day_of_year'] == 240\n","test_ft_87.loc[mask_test, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_88['weekend'] = 0\n","test_ft_88['weekend'] = 0\n","\n","mask_train = (train_ft_88['day_of_year'] == 163) | (train_ft_88['day_of_year'] == 177)| (train_ft_88['day_of_year'] == 191)| (train_ft_88['day_of_year'] == 205)| (train_ft_88['day_of_year'] == 226)\n","train_ft_88.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_88['day_of_year'] == 240\n","test_ft_88.loc[mask_test, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_89['weekend'] = 0\n","test_ft_89['weekend'] = 0\n","\n","mask_train = (train_ft_89['day_of_year'] == 163) | (train_ft_89['day_of_year'] == 177)| (train_ft_89['day_of_year'] == 191)| (train_ft_89['day_of_year'] == 205)| (train_ft_89['day_of_year'] == 226)\n","train_ft_89.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_89['day_of_year'] == 240\n","test_ft_89.loc[mask_test, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_90['weekend'] = 0\n","test_ft_90['weekend'] = 0\n","\n","mask_train = (train_ft_90['day_of_year'] == 163) | (train_ft_90['day_of_year'] == 177)| (train_ft_90['day_of_year'] == 191)| (train_ft_90['day_of_year'] == 205)| (train_ft_90['day_of_year'] == 226)\n","train_ft_90.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_90['day_of_year'] == 240\n","test_ft_90.loc[mask_test, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_91['weekend'] = 0\n","test_ft_91['weekend'] = 0\n","\n","mask_train = (train_ft_91['day_of_year'] == 163) | (train_ft_91['day_of_year'] == 177)| (train_ft_91['day_of_year'] == 191)| (train_ft_91['day_of_year'] == 205)| (train_ft_91['day_of_year'] == 226)\n","train_ft_91.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_91['day_of_year'] == 240\n","test_ft_91.loc[mask_test, 'weekend'] = 1\n","\n","# 휴무일 지정(1: 휴무일, 0: 영업일)\n","train_ft_92['weekend'] = 0\n","test_ft_92['weekend'] = 0\n","\n","mask_train = (train_ft_92['day_of_year'] == 163) | (train_ft_92['day_of_year'] == 177)| (train_ft_92['day_of_year'] == 191)| (train_ft_92['day_of_year'] == 205)| (train_ft_92['day_of_year'] == 226)\n","train_ft_92.loc[mask_train, 'weekend'] = 1\n","\n","mask_test = test_ft_92['day_of_year'] == 240\n","test_ft_92.loc[mask_test, 'weekend'] = 1\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"GKJOj8H_fSz3"},"source":["- 공휴일 활용 피처 : weekend가 있는 건물들에 대해서 weekend의 왜도"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7_-x_gOYfjew"},"outputs":[],"source":["\n","\n"]},{"cell_type":"markdown","metadata":{"id":"CwKtm7zEDVfI"},"source":["## 개별 피처 추가 및 제거"]},{"cell_type":"markdown","metadata":{"id":"nG8drb_BlmSv"},"source":["- 이상 건물들의 train값 이상치 -\u003e 전체 건물들의 이상치를 처리하는 방법"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5pwzii_4mGe1"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sdKUmGZ991uu"},"outputs":[],"source":["# for i in range(1,101):\n","#     second_largest = globals()[f'train_ft_{i}']['energy_consum'][globals()[f'train_ft_{i}']['energy_consum'] \u003c globals()[f'train_ft_{i}']['energy_consum'].max()].nlargest(2).iloc[-1]\n","#     second_smallest = globals()[f'train_ft_{i}']['energy_consum'][globals()[f'train_ft_{i}']['energy_consum'] \u003e globals()[f'train_ft_{i}']['energy_consum'].min()].nsmallest(2).iloc[-1]\n","\n","#     # Replace maximum and minimum values with second largest and second smallest values\n","#     globals()[f'train_ft_{i}']['energy_consum'].replace(globals()[f'train_ft_{i}']['energy_consum'].max(), second_largest, inplace=True)\n","#     globals()[f'train_ft_{i}']['energy_consum'].replace(globals()[f'train_ft_{i}']['energy_consum'].min(), second_smallest, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ldCXVmJ9mZRv"},"outputs":[],"source":["# for i in range(1,101):\n","#     second_largest = globals()[f'test_ft_{i}']['energy_consum'][globals()[f'test_ft_{i}']['energy_consum'] \u003c globals()[f'test_ft_{i}']['energy_consum'].max()].nlargest(2).iloc[-1]\n","#     second_smallest = globals()[f'test_ft_{i}']['energy_consum'][globals()[f'test_ft_{i}']['energy_consum'] \u003e globals()[f'test_ft_{i}']['energy_consum'].min()].nsmallest(2).iloc[-1]\n","\n","#     # Replace maximum and minimum values with second largest and second smallest values\n","#     globals()[f'test_ft_{i}']['energy_consum'].replace(globals()[f'test_ft_{i}']['energy_consum'].max(), second_largest, inplace=True)\n","#     globals()[f'test_ft_{i}']['energy_consum'].replace(globals()[f'test_ft_{i}']['energy_consum'].min(), second_smallest, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"V03UhiEmEK5f"},"outputs":[],"source":["train_ft_1.columns\n"]},{"cell_type":"markdown","metadata":{"id":"QMN6vjGQDlUI"},"source":["- day of year 제거"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tiugwgkTzBrZ"},"outputs":[],"source":["\n","# # Create a list to store train_ft and test_ft DataFrames\n","# train_ft_list = [globals()[f'train_ft_{i}'] for i in range(1, 101)]\n","# test_ft_list = [globals()[f'test_ft_{i}'] for i in range(1, 101)]\n","\n","# # Iterate through each index (1 to 100)\n","# for i in range(1, 101):\n","#     train_df = train_ft_list[i-1]\n","#     test_df = test_ft_list[i-1]\n","\n","#     # Check if 'weekend' column exists in the dataframe\n","#     if 'weekend' in train_df.columns:\n","#         # Filter buildings with weekends\n","#         buildings_with_weekends = train_df[train_df['weekend'] == 1]['building_num'].unique()\n","\n","#         # Calculate skewness for each combination of building_num, day, and time on weekends\n","#         weekend_skewness_df = train_df[train_df['building_num'].isin(buildings_with_weekends)].groupby(['building_num', 'day', 'time'])['energy_consum'].apply(lambda x: np.nan if x.std() == 0 else x.skew()).reset_index()\n","#         weekend_skewness_df.rename(columns={'energy_consum': 'weekend_skewness'}, inplace=True)\n","\n","#         # Merge weekend skewness values with train_df and test_df\n","#         train_df = pd.merge(train_df, weekend_skewness_df, on=['building_num', 'day', 'time'], how='left')\n","#         test_df = pd.merge(test_df, weekend_skewness_df, on=['building_num', 'day', 'time'], how='left')\n","\n","#         # Fill missing values with 0 (or any other suitable value)\n","#         train_df['weekend_skewness'].fillna(0, inplace=True)\n","#         test_df['weekend_skewness'].fillna(0, inplace=True)\n","\n","#         # Update the modified DataFrames in the list\n","#         train_ft_list[i-1] = train_df\n","#         test_ft_list[i-1] = test_df\n","\n","# # Update the global DataFrames with the modified ones\n","# for i in range(1, 101):\n","#     globals()[f'train_ft_{i}'] = train_ft_list[i-1]\n","#     globals()[f'test_ft_{i}'] = test_ft_list[i-1]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0jg6cojCzcEa"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"V7xBGVHZ0nmm"},"source":["- 공휴일의 왜도"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WD-9x_c97Bsm"},"outputs":[],"source":["\n","# for i in range(1,101):\n","#     if 'weekend' in globals()[f'train_ft_{i}']:\n","\n","#         buildings_with_weekends = globals()[f'train_ft_{i}'][globals()[f'train_ft_{i}']['weekend'] == 1]\n","\n","#         # Calculate skewness for each combination of building_num and time on weekends\n","#         weekend_skewness_df = globals()[f'train_ft_{i}'][globals()[f'train_ft_{i}']['building_num'].isin(buildings_with_weekends)].groupby(['building_num','day','time'])['energy_consum'].apply(lambda x: np.nan if x.std() == 0 else x.skew()).reset_index()\n","#         weekend_skewness_df.rename(columns={'energy_consum': 'weekend_skewness'}, inplace=True)\n","\n","#         # Merge weekend skewness values with train_ft\n","#         globals()[f'train_ft_{i}'] = pd.merge(globals()[f'train_ft_{i}'], weekend_skewness_df, on=['building_num','day','time'], how='left')\n","#         globals()[f'test_ft_{i}'] = pd.merge(globals()[f'test_ft_{i}'], weekend_skewness_df, on=['building_num','day','time'], how='left')\n","#         # Fill missing values with 0 (or any other suitable value)\n","#         globals()[f'train_ft_{i}']['weekend_skewness'].fillna(0, inplace=True)\n","#         globals()[f'test_ft_{i}']['weekend_skewness'].fillna(0, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"50KCAaK4zYP4"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-BYuImyRHHO-"},"outputs":[],"source":["# columns_to_drop = ['day_hour_mean']  # 삭제할 칼럼 이름들\n","\n","# target_indices = [30, 51, 54, 56, 67, 71, 80, 82]  # 특정 i 값들\n","\n","\n","# for i in range(1, 101):\n","#     if i in target_indices:  # i 값이 특정 값인 경우에만 칼럼 삭제\n","#         train_subset = globals()[f'train_ft_{i}'].drop(columns=columns_to_drop)\n","#         test_subset = globals()[f'test_ft_{i}'].drop(columns=columns_to_drop)\n","#     else:\n","#         train_subset = globals()[f'train_ft_{i}']\n","#         test_subset = globals()[f'test_ft_{i}']\n","\n","#     # 데이터 프레임 갱신\n","#     globals()[f'train_ft_{i}'] = train_subset\n","#     globals()[f'test_ft_{i}'] = test_subset"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ueFA1-kHDNks"},"outputs":[],"source":["# columns_to_drop = ['precip']  # 삭제할 칼럼 이름들\n","# # target_indices = [1, 9, 15, 19, 25, 28, 32, 36, 41, 79, 81, 82, 91, 92, 99, 100]  # 특정 i 값들\n","# target_indices = [3,9,42, 54,72,82,91,92 ]  # 특정 i 값들\n","\n","\n","# for i in range(1, 101):\n","#     if i in target_indices:  # i 값이 특정 값인 경우에만 칼럼 삭제\n","#         train_subset = globals()[f'train_ft_{i}'].drop(columns=columns_to_drop)\n","#         test_subset = globals()[f'test_ft_{i}'].drop(columns=columns_to_drop)\n","#     else:\n","#         train_subset = globals()[f'train_ft_{i}']\n","#         test_subset = globals()[f'test_ft_{i}']\n","\n","#     # 데이터 프레임 갱신\n","#     globals()[f'train_ft_{i}'] = train_subset\n","#     globals()[f'test_ft_{i}'] = test_subset"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DPYD2bMPAXy3"},"outputs":[],"source":["train_ft.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VCg1zFO4ATca"},"outputs":[],"source":["test_ft.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AyVDm64FIlsv"},"outputs":[],"source":["train_ft_1.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q-B23S6IHw-l"},"outputs":[],"source":["\n","\n","columns_to_drop = [ 'temp','wind', 'hum', # RM 때문에 제거할 칼럼\n","                   'heat_wave', 'heat_index',  # 필요 없어서 제거할 칼럼\n","                   'day_of_year','building_num','date_time','building_type','CDH','hour_std','precip','hour_mean'] #일조의 변화율?\n","                    # 'precip', 'hour_mean']  # 기본 제거할 칼럼\n","\n","for i in range(1, 101):\n","    globals()[f'train_ft_{i}'] = globals()[f'train_ft_{i}'].drop(columns=columns_to_drop)\n","    globals()[f'test_ft_{i}'] = globals()[f'test_ft_{i}'].drop(columns=columns_to_drop)"]},{"cell_type":"markdown","metadata":{"id":"B9UxtDec0Q8W"},"source":["- 함수"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6mkRQhbMzEu1"},"outputs":[],"source":["train_ft.iloc[:, 2:]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PeyRCLFt0J8F"},"outputs":[],"source":["# 데이터셋 만들기(마지막 7일간의 데이터를 검증데이터셋으로 사용)\n","def make_dataset(train_df, test_df):\n","    train_x = train_df.iloc[:, 2:]\n","    train_y = train_df['energy_consum']\n","\n","    test_x = test_df.iloc[:, 1:]\n","    return train_x, train_y, test_x\n","\n","def train_test_split(train_x, train_y, test_size=168):\n","    y_train, y_valid, x_train, x_valid = temporal_train_test_split(y = train_y, X = train_x, test_size = test_size)\n","    return x_train, y_train, x_valid, y_valid"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S_TK_KnV6Ws4"},"outputs":[],"source":["# n_fold로 데이터셋 나누기\n","def n_fold_train_test_split(train_x, train_y, n, test_size=168, week=11):\n","    x_valid = train_x[test_size * (week-n-1):test_size * (week-n)]\n","    y_valid = train_y[test_size * (week-n-1):test_size * (week-n)]\n","    x_train = train_x.drop(index = list(x_valid.index))\n","    y_train = train_y.drop(index = list(y_valid.index))\n","    return x_train, y_train, x_valid, y_valid"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VrltlSaA0amB"},"outputs":[],"source":["\n","# def lightgbm_smape(y_true, y_pred):\n","#     smape_val = _smape(y_true, y_pred)\n","#     return 'SMAPE', smape_val, False\n","\n","# LGBMRegressor 모델\n","def lgbm_predict(model, x_train, y_train, x_valid, y_valid, stopping=300, eval_metric=lightgbm_smape):\n","    model.fit(x_train, y_train, eval_set=[(x_train, y_train), (x_valid, y_valid)], callbacks = [early_stopping(stopping)], eval_metric=eval_metric)\n","    pred = model.predict(x_valid)\n","    pred = pd.Series(pred)\n","    pred.index = np.arange(y_valid.index[0], y_valid.index[-1]+1)\n","    plot_series(y_train, y_valid, pd.Series(pred), markers=[',' , ',', ','])\n","    smape_score = _smape(y_valid, pred)\n","    print(f\"SMAPE_SCORE : {smape_score}\")\n","    return smape_score\n","\n","# test dataset 예측\n","def lgbm_test_predict(model, train_x, train_y, test_x):\n","    model.fit(train_x, train_y)\n","    lgbm_pred = model.predict(test_x)\n","    return lgbm_pred"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vswG2JhZ0JQ6"},"outputs":[],"source":["# LGBM 모델 사용\n","\n","# LGBM 모델 사용\n","lgbm_preds = np.array([])\n","fold = 4\n","smape_score_mean = []\n","\n","def lgbm_evaluation(train_ft, test_ft) :\n","    global lgbm_preds\n","\n","    model = LGBMRegressor(random_state=SEED, objective='regression')\n","    train_x, train_y, test_x = make_dataset(train_ft, test_ft)\n","    # 건물별 fold별 smape score\n","    smape_score = []\n","    for n in tqdm(range(fold)):\n","        x_train, y_train, x_valid, y_valid = n_fold_train_test_split(train_x, train_y, n=n)\n","\n","        model.fit(x_train, y_train, eval_set=[(x_valid, y_valid)], callbacks = [early_stopping(120)], eval_metric=lightgbm_smape)\n","\n","        pred = model.predict(x_valid)\n","        score = _smape(y_valid, pred)\n","        smape_score.append(score)\n","\n","    smape_score_mean.append(np.mean(smape_score))\n","\n","    lgbm_pred = lgbm_test_predict(model, train_x, train_y, test_x)\n","    lgbm_preds = np.concatenate([lgbm_preds, lgbm_pred])\n","\n","print(smape_score_mean)"]},{"cell_type":"markdown","metadata":{"id":"u-50kJed0GhM"},"source":["## 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NTrIwpFZ3hpa"},"outputs":[],"source":["lgbm_evaluation(train_ft_1, test_ft_1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IYQx6tRb3pfc"},"outputs":[],"source":["train_ft_1.columns"]},{"cell_type":"markdown","metadata":{"id":"-sOMmfqz6MuB"},"source":["## 2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"auWMefRZ6MuD"},"outputs":[],"source":["lgbm_evaluation(train_ft_2, test_ft_2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zSFgyyn27Qew"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"u-CeKD1J7Qrg"},"source":["## 3"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XFIIVlGc7Qrh"},"outputs":[],"source":["lgbm_evaluation(train_ft_3, test_ft_3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nremGS007Vor"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"ObS_p8DO7V-u"},"source":["## 4"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MF3Hoo_m7V-v"},"outputs":[],"source":["lgbm_evaluation(train_ft_4, test_ft_4)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wZ56w9A_7bOf"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"TjagSisa7bgF"},"source":["## 5"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kDAUWQWz7bgG"},"outputs":[],"source":["lgbm_evaluation(train_ft_5, test_ft_5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1fWIQjPL7f7G"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"OLr4Z7lR7gNh"},"source":["## 6"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1QekdK4g7gNi"},"outputs":[],"source":["lgbm_evaluation(train_ft_6, test_ft_6)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VcbhOO1P7lYP"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"kTk_7UIa7lvI"},"source":["## 7"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PVNqDm247lvJ"},"outputs":[],"source":["lgbm_evaluation(train_ft_7, test_ft_7)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0RKNN-sm7qLQ"},"outputs":[],"source":["train_ft_7['energy_consum'].max"]},{"cell_type":"markdown","metadata":{"id":"x1zFfgrJ7qS8"},"source":["## 8"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x512t7Ld7qTB"},"outputs":[],"source":["lgbm_evaluation(train_ft_8, test_ft_8)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7Ple2ddh7ulE"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"Ajs3JgOH7uwt"},"source":["## 9"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"icXa95ql7uwu"},"outputs":[],"source":["lgbm_evaluation(train_ft_9, test_ft_9)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZqT0Mgpt70HY"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"HhmY9faU70QL"},"source":["## 10"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rt7lqYi770QM"},"outputs":[],"source":["lgbm_evaluation(train_ft_10, test_ft_10)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bb__UBC874nJ"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"uzmIG9b-75Eq"},"source":["## 11"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X9skHmaL75Er"},"outputs":[],"source":["lgbm_evaluation(train_ft_11, test_ft_11)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sWbiiYGK8AEc"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"tm2cwIUX8AV9"},"source":["## 12"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N9-g85Vq8AV-"},"outputs":[],"source":["lgbm_evaluation(train_ft_12, test_ft_12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j6LJqinW8EmG"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"5u12BbBB8E-t"},"source":["## 13"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZaOKtV218E-t"},"outputs":[],"source":["lgbm_evaluation(train_ft_13, test_ft_13)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U04jG14x8Iio"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"GABQGB2Z8I3N"},"source":["## 14"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yY1LXVis8I3O"},"outputs":[],"source":["lgbm_evaluation(train_ft_14, test_ft_14)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9VBVJzjs8M4I"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"ETtklenp8NOg"},"source":["## 15"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xXx0TsX-8NOh"},"outputs":[],"source":["lgbm_evaluation(train_ft_15, test_ft_15)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fG0ChOgW8Rob"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"8z3WqDjd8R9Y"},"source":["## 16"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rP-XIG928R9Z"},"outputs":[],"source":["lgbm_evaluation(train_ft_16, test_ft_16)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dwO7mm4i8WmF"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"EQDdBeXy8W7F"},"source":["## 17"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nVphTnYo8W7G"},"outputs":[],"source":["lgbm_evaluation(train_ft_17, test_ft_17)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yqEUWLfL8bUG"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"yymQT8bV8bcq"},"source":["## 18"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Aoxesec98bcr"},"outputs":[],"source":["lgbm_evaluation(train_ft_18, test_ft_18)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7zqZ3E3_8gQt"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"nr7HUZRy8gj9"},"source":["## 19"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tOj6oVzZ8gj-"},"outputs":[],"source":["lgbm_evaluation(train_ft_19, test_ft_19)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZSk7tX9q8lZs"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"mi1swJxd8l5L"},"source":["## 20"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h0qVXJxt8l5M"},"outputs":[],"source":["lgbm_evaluation(train_ft_20, test_ft_20)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bfkLkeMp8qwj"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"DKYXKfKb8rFu"},"source":["## 21"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"27hoytpG8rFv"},"outputs":[],"source":["lgbm_evaluation(train_ft_21, test_ft_21)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GHZJqCX58t8b"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"f926QSgW8uD0"},"source":["## 22"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BrcbZP9A8uD1"},"outputs":[],"source":["lgbm_evaluation(train_ft_22, test_ft_22)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"38p_rC_m8w1P"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"PS2uwYe88w9d"},"source":["## 23"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jY9PAdyD8w9e"},"outputs":[],"source":["lgbm_evaluation(train_ft_23, test_ft_23)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-nFQeALK80MC"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"OyX8RPIf80R_"},"source":["## 24"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S213lJwV80R_"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uS-uGPjr80SA"},"outputs":[],"source":["lgbm_evaluation(train_ft_24, test_ft_24)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Htdsdf3O83Yh"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"nUdlMA_x83kD"},"source":["## 25"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OKLmG5Z383kE"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qJVCzpmw83kF"},"outputs":[],"source":["lgbm_evaluation(train_ft_25, test_ft_25)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mqQwu1KD88Mv"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"K4kfsUM_88c3"},"source":["## 26"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Oek-AEWw88c4"},"outputs":[],"source":["lgbm_evaluation(train_ft_26, test_ft_26)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_A1ff7VP8_e9"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"_VC8sFaU8_3W"},"source":["## 27"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"o3nK2GX78_3X"},"outputs":[],"source":["lgbm_evaluation(train_ft_27, test_ft_27)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hgcgzhNR9Clt"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"4zZsnzn19C4J"},"source":["## 28"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VUS_JhOe9C4K"},"outputs":[],"source":["lgbm_evaluation(train_ft_28, test_ft_28)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FHjmY3Gq9GF_"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"hvUOp1-h9Gbq"},"source":["## 29"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kUDoFMwy9Krc"},"outputs":[],"source":["lgbm_evaluation(train_ft_29, test_ft_29)"]},{"cell_type":"markdown","metadata":{"id":"V4QaWA7Y9LC_"},"source":["## 30"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vNPSvSwA9LC_"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c2lgBmHk9LDA"},"outputs":[],"source":["lgbm_evaluation(train_ft_30, test_ft_30)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DHnjkW-89RiD"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"JgSVD_Fl9RtL"},"source":["## 31"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ls_lNglX9RtM"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"96onRcH79RtM"},"outputs":[],"source":["lgbm_evaluation(train_ft_31, test_ft_31)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GSju7XLo9UZc"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"VylEN_JT9Uvx"},"source":["## 32"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TWPKiE0M9Uv1"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yOZik-4f9Uv1"},"outputs":[],"source":["lgbm_evaluation(train_ft_32, test_ft_32)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LHHL7wxE9Xoh"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"bSCx9hHF9X2u"},"source":["## 33"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hlx7kc8v9X2v"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WSkyoD329X2x"},"outputs":[],"source":["lgbm_evaluation(train_ft_33, test_ft_33)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iuOsJsZD9av8"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"iyEWfIGg9bJd"},"source":["## 34"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EpwGj4BF9bJd"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QxRpJYNN9bJe"},"outputs":[],"source":["lgbm_evaluation(train_ft_34, test_ft_34)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LQ4HDk3u9fDc"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"JBiT3hns9fJ1"},"source":["## 35"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"33b4Hqc99fJ2"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Lscru0eC9fJ3"},"outputs":[],"source":["lgbm_evaluation(train_ft_35, test_ft_35)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7tQmPJNz9iCF"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"riN06N1c9iMr"},"source":["## 36"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2zv3WnEY9iMs"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MIoqN_pH9iMt"},"outputs":[],"source":["lgbm_evaluation(train_ft_36, test_ft_36)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cJ9N4AMR9lh3"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"voYlhgjf9mDB"},"source":["## 37"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TKGFQwem9mDB"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5VVaDeRa9mDC"},"outputs":[],"source":["lgbm_evaluation(train_ft_37, test_ft_37)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HedGl2Y59pMH"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"ILkpWAzQ9pkI"},"source":["## 38"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JOjhSWRl9pkI"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xfYAPWyU9pkJ"},"outputs":[],"source":["lgbm_evaluation(train_ft_38, test_ft_38)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8n8ULI8q9shS"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"cXxWfEbR9sxy"},"source":["## 39"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zuZb_uyp9sxz"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KV7orQp59sxz"},"outputs":[],"source":["lgbm_evaluation(train_ft_39, test_ft_39)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VyOxym9A9v9u"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"8dE_fckk9wJ6"},"source":["## 40"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6gJsypxg9wJ6"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kLDOhO9k9wJ7"},"outputs":[],"source":["lgbm_evaluation(train_ft_40, test_ft_40)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YNQ5ECg292aT"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"hhfm-Eoc92kX"},"source":["## 41"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Y65BWGZ292kY"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zMkvcbpN92kY"},"outputs":[],"source":["lgbm_evaluation(train_ft_41, test_ft_41)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vqg2gc5Q95gG"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"6HZcvtf795qA"},"source":["## 42"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"z0nTFGsN95qB"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mDjR9pbH95qC"},"outputs":[],"source":["lgbm_evaluation(train_ft_42, test_ft_42)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rebs84ps98h0"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"1mtenyYF98r3"},"source":["## 43"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C4EHFnhv98r3"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oiA5YXK198r4"},"outputs":[],"source":["lgbm_evaluation(train_ft_43, test_ft_43)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JEiN3IY09_yD"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"ljm_FM5f-ANX"},"source":["## 44"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"aFhI9wOX-ANX"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"3ot_ca34-ANX"},"outputs":[],"source":["lgbm_evaluation(train_ft_44, test_ft_44)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"EI37nFc4-DWl"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"9MUgbjrY-DkX"},"source":["## 45"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"eO4mqtU8-DkY"},"outputs":[],"source":["train_ft_45.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"FEzTZQ3m-DkZ"},"outputs":[],"source":["lgbm_evaluation(train_ft_45, test_ft_45)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"yl2kaIg4-HXh"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"460CMY0o-Hiq"},"source":["## 46"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ueIx4isw-Hiw"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"j-B8B_CS-Hiw"},"outputs":[],"source":["lgbm_evaluation(train_ft_46, test_ft_46)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"GsT79ukT-LbR"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"hvOa9XGH-L0N"},"source":["## 47"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"r3pM--6Z-L0O"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"hnlGbUNa-L0O"},"outputs":[],"source":["lgbm_evaluation(train_ft_47, test_ft_47)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"KpIXVt5N-PH7"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"30mrlbJy-PPu"},"source":["## 48"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"d2bnwxSm-PPu"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"uzPNtKl2-PPv"},"outputs":[],"source":["lgbm_evaluation(train_ft_48, test_ft_48)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"vN4B_LM_-Sm0"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"PdPGyagG-S1c"},"source":["## 49"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"2QDSN_ZC-S1d"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ahXTi0Ke-S1d"},"outputs":[],"source":["lgbm_evaluation(train_ft_49, test_ft_49)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Jh-UOuQc-V1z"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"xDX46kyT-WRZ"},"source":["## 50"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"60kO-Yt3-WRa"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qHq7816f-WRb"},"outputs":[],"source":["lgbm_evaluation(train_ft_50, test_ft_50)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mdHc69sj-aNf"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"y43OMNHq-aho"},"source":["## 51"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"lSl7YRXv-aho"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"l8Hein8t-ahp"},"outputs":[],"source":["lgbm_evaluation(train_ft_51, test_ft_51)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"JA58t-TX-hEf"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"IaHUycM8-hLj"},"source":["## 52"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"vaLPJDqr-hLj"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"UO5_ZvxT-hLk"},"outputs":[],"source":["lgbm_evaluation(train_ft_52, test_ft_52)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"-AgrpNa--jz-"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"z1FJB9VJ-j75"},"source":["## 53"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"-UN9B2q3-j76"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"tyOm7PsS-j77"},"outputs":[],"source":["lgbm_evaluation(train_ft_53, test_ft_53)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"FZmNhhrk-m-3"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"-emLj14X-nOJ"},"source":["## 54"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_Zm6HpVf-nOJ"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qjq7PLKG-nOK"},"outputs":[],"source":["lgbm_evaluation(train_ft_54, test_ft_54)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"HvHPVzrM-qDR"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"Ob260RLz-qL5"},"source":["## 55"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"-usRt3u0-qL7"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"TTVY6CoA-qL7"},"outputs":[],"source":["lgbm_evaluation(train_ft_55, test_ft_55)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"NQnS_dpS-tbr"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"cJeIz52h-tpb"},"source":["## 56"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"E5r7vs9G-tpb"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"l3k_n8Ns-tpc"},"outputs":[],"source":["lgbm_evaluation(train_ft_56, test_ft_56)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"RkXnvISS-wNp"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"psvmdsTu-wYq"},"source":["## 57"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"KqkvAaHW-wYq"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"US69gi_s-wYr"},"outputs":[],"source":["lgbm_evaluation(train_ft_57, test_ft_57)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"5jetc204-zaI"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"Fq-LZ_X0-zme"},"source":["## 58"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"hLkx4eJW-zme"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"wIW5flTW-zmf"},"outputs":[],"source":["lgbm_evaluation(train_ft_58, test_ft_58)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"4poCk2Hr-23G"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"d41L5VPv-3LK"},"source":["## 59"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"xkBBbqb7-3LK"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"KLTLjj6a-3LL"},"outputs":[],"source":["lgbm_evaluation(train_ft_59, test_ft_59)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"RNWYZ077-678"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"UG3WZwse-7Ks"},"source":["## 60"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"k_EcuVtf-7Lm"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"QmZEVOQF-7Ln"},"outputs":[],"source":["lgbm_evaluation(train_ft_60, test_ft_60)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"lyuLmX52_CR2"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"Xd3pufBU_Caj"},"source":["## 61"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"xrhkxRvX_Cak"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"w87zi_PQ_Cak"},"outputs":[],"source":["lgbm_evaluation(train_ft_61, test_ft_61)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"QDN-K222_FbQ"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"pxvK9stH_Fjb"},"source":["## 62"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"vqch5XO-_Fjc"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"lpdkpNGV_Fjd"},"outputs":[],"source":["lgbm_evaluation(train_ft_62, test_ft_62)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"YwIv_UyE_IrY"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"STTVXmQM_Iyt"},"source":["## 63"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"s07lR3Co_Iyu"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mjFuMEsM_Iyu"},"outputs":[],"source":["lgbm_evaluation(train_ft_63, test_ft_63)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"8MOE7DWN_M1S"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"m1G_NfRH_NBa"},"source":["## 64"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"xwo9Q-iV_NBb"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"z9K4J6l7_NBb"},"outputs":[],"source":["lgbm_evaluation(train_ft_64, test_ft_64)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"MzjiJgRz_Rmc"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"GXYq49NV_R2Y"},"source":["## 65"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"MmhxiRDD_R2Y"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"cpJNfcyt_R2Z"},"outputs":[],"source":["lgbm_evaluation(train_ft_65, test_ft_65)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"1-6jSkKz_VEA"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"geFjcM0q_VNX"},"source":["## 66"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"nkXXHDaA_VNY"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"CHiGmfEp_VNY"},"outputs":[],"source":["lgbm_evaluation(train_ft_66, test_ft_66)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"IdQ_-rCu_YLE"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"5RWaJWiw_YiN"},"source":["## 67"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"omqaNENN_YiO"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"XiX2aV53_YiO"},"outputs":[],"source":["lgbm_evaluation(train_ft_67, test_ft_67)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"xVn61YIj_bzD"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"8SPTDPbw_cB0"},"source":["## 68"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"d4ROhW6n_cB1"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qUr1-XIL_cB1"},"outputs":[],"source":["lgbm_evaluation(train_ft_68, test_ft_68)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"YlNLyeFu_fGl"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"TnjUK-xn_fgu"},"source":["## 69"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"AoudQMgH_fgu"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mTA7gZS5_fgv"},"outputs":[],"source":["lgbm_evaluation(train_ft_69, test_ft_69)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qQzVMXpH_ih8"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"z3PN2XxG_i_9"},"source":["## 70"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"lu7SK3T5_i_-"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"KIPhF0bE_jAB"},"outputs":[],"source":["lgbm_evaluation(train_ft_70, test_ft_70)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Um1YSZFm_rDk"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"pGYM4Mvm_rOI"},"source":["## 71"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ZkRR3kB7_rOJ"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"L6_4gB6q_rOK"},"outputs":[],"source":["lgbm_evaluation(train_ft_71, test_ft_71)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"kd9Mse3C_vc6"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"BgsfW0jl_vuU"},"source":["## 72"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"5A3od1UL_vuX"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"0Dq6zbdS_vuX"},"outputs":[],"source":["lgbm_evaluation(train_ft_72, test_ft_72)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"KREzd8u8_zFm"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"oGgUvCtY_zPN"},"source":["## 73"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ubNDDolO_zPN"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"oN_vdMVG_zPQ"},"outputs":[],"source":["lgbm_evaluation(train_ft_73, test_ft_73)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_X3av6rA_2ZH"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"sAxKX3uw_2ow"},"source":["## 74"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"4wm2y8jt_2ox"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"j5ovbD1W_2ox"},"outputs":[],"source":["lgbm_evaluation(train_ft_74, test_ft_74)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mi4N-e85_6P4"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"1yEgcf9t_6ed"},"source":["## 75"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Eavnbmbo_6ee"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"4LNO9ncm_6ee"},"outputs":[],"source":["lgbm_evaluation(train_ft_75, test_ft_75)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"STYch97e_9p5"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"OIDeb27t_936"},"source":["## 76"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_dS80lOv_937"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"YR9S9Mps_938"},"outputs":[],"source":["lgbm_evaluation(train_ft_76, test_ft_76)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"XlbqdhdDAA6j"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"iX5IF6ZHABOb"},"source":["## 77"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"42scStl6ABOb"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"f4pWWWlbABOc"},"outputs":[],"source":["lgbm_evaluation(train_ft_77, test_ft_77)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"JD_cVvXKAENk"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"PY1zJbD3AEf9"},"source":["## 78"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_AlmWaUvAEf9"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"fz3jfruKAEf-"},"outputs":[],"source":["lgbm_evaluation(train_ft_78, test_ft_78)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"DpkxmW_cAICz"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"96eLGGVlAIL9"},"source":["## 79"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"y53MgXgaAIL-"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"cKP_HBiTAIMW"},"outputs":[],"source":["lgbm_evaluation(train_ft_79, test_ft_79)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"DzjtQjPJAL-c"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"4Aafrun1AMIA"},"source":["## 80"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"uoI1_ktHAMID"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"bHRid7F2AMIE"},"outputs":[],"source":["lgbm_evaluation(train_ft_80, test_ft_80)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Kkc4sC-mATL4"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"DyZuqZXjATWa"},"source":["## 81"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"46BEKCNkATWb"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"d6lE41CwATWd"},"outputs":[],"source":["lgbm_evaluation(train_ft_81, test_ft_81)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"2uv_fGtUAXu_"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"SpJvetO6AYFj"},"source":["## 82"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"s0vOhfruAYFk"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"iY0xQM6TAYFk"},"outputs":[],"source":["lgbm_evaluation(train_ft_82, test_ft_82)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qR20aCybAbzA"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"v-eycStXAcD-"},"source":["## 83"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Ify6uI1jAcD_"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mr5UKJw9AcD_"},"outputs":[],"source":["lgbm_evaluation(train_ft_83, test_ft_83)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"LSCFwkvXAfaP"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"6iuq7IkEAfot"},"source":["## 84"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"nk1fb2spAfou"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"eRW5r2z2Afov"},"outputs":[],"source":["lgbm_evaluation(train_ft_84, test_ft_84)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qDblV6VZAjE3"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"EvawUOA7AjX4"},"source":["## 85"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"vL9nGAH3AjX4"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Mfmg36R1AjX5"},"outputs":[],"source":["lgbm_evaluation(train_ft_85, test_ft_85)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"kDoo7Cj7Amzd"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"OwJtfV3yAnCr"},"source":["## 86"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"0ushnGOyAnCs"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"dVSM__0sAnCs"},"outputs":[],"source":["lgbm_evaluation(train_ft_86, test_ft_86)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"7G5x-rKWAqfH"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"TDMuSYWoAqpl"},"source":["## 87"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"tTR1Hk_fAqpm"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"4F6Q4MCHAqpm"},"outputs":[],"source":["lgbm_evaluation(train_ft_87, test_ft_87)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"gvb9vrKrAt3B"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"Pq1-gE3fAuDU"},"source":["## 88"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"LddgX83IAuDV"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"l9BiWbInAuDW"},"outputs":[],"source":["lgbm_evaluation(train_ft_88, test_ft_88)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"tvrc9sQgAxT4"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"QpBgQJXUAx3m"},"source":["## 89"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"uP8uDQeAAx3m"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"JmZ_sVfeAx3m"},"outputs":[],"source":["lgbm_evaluation(train_ft_89, test_ft_89)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"XDxVOM0ZA1Sl"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"klMA10HUA1ip"},"source":["## 90"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qDZkoOJEA1ip"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"jFHkGwkrA1iq"},"outputs":[],"source":["lgbm_evaluation(train_ft_90, test_ft_90)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"lSCVPdU1A8d0"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"zHO3MdHPA9MT"},"source":["## 91"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"EZbfdRvFA9MT"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"oQd_ITheA9MU"},"outputs":[],"source":["lgbm_evaluation(train_ft_91, test_ft_91)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"VOM85TL-BB3t"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"PMODXj5WBCHB"},"source":["## 92"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"kgvXIouuBCHC"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"0ynN7UtEBCHC"},"outputs":[],"source":["lgbm_evaluation(train_ft_92, test_ft_92)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"NTuJqUTqBFt-"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"CXTvfBvOBGKx"},"source":["## 93"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"-5Hb0jxaBGKy"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"CKoyEBpzBGKy"},"outputs":[],"source":["lgbm_evaluation(train_ft_93, test_ft_93)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"5xLzD1XWBJ8N"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"Q3F5kcNVBK8L"},"source":["## 94"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"-X6qoCC-BK8L"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"7pLp7b9DBK8M"},"outputs":[],"source":["lgbm_evaluation(train_ft_94, test_ft_94)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"GVL3b9__BOe1"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"ZBv9_aTUBO_N"},"source":["## 95"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"jNMEe9saBO_N"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"GkJCwFZiBO_O"},"outputs":[],"source":["lgbm_evaluation(train_ft_95, test_ft_95)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"CfrmDjztBTKM"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"7Vvp84eEBTt4"},"source":["## 96"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"i1UtQfBnBTt9"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"E6iD08H1BTt9"},"outputs":[],"source":["lgbm_evaluation(train_ft_96, test_ft_96)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ESCufu_bBXCf"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"a2MectfFBXlO"},"source":["## 97"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"j6XvS8Q6BXlO"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"CQnZ70tLBXlP"},"outputs":[],"source":["lgbm_evaluation(train_ft_97, test_ft_97)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"gY3BHJR1Bbf3"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"RWQBrEhJBcGF"},"source":["## 98"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"GO5rGZRYBcGF"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"TDW2dqYqBcGG"},"outputs":[],"source":["lgbm_evaluation(train_ft_98, test_ft_98)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"qntMJ1CNBfVg"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"IORZBLPuBgUj"},"source":["## 99"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Q9UUKnROBgUj"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"5TMgLY9fBgUk"},"outputs":[],"source":["lgbm_evaluation(train_ft_99, test_ft_99)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Ez2Hy5n9Bj45"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"jErBfWcUBkVW"},"source":["## 100"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"llJ0KrhHBkVX"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"YEDzhWHyBkVX"},"outputs":[],"source":["lgbm_evaluation(train_ft_100, test_ft_100)"]},{"cell_type":"markdown","metadata":{"id":"pFruEBe95LKU"},"source":["# 제출"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"GT5A8mJ85O2y"},"outputs":[],"source":["# submission = pd.read_csv(f\"{DATA_PATH}sample_submission.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"OvKd0X7B18w6"},"outputs":[],"source":["len(lgbm_preds)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"6mhjPsReUE16"},"outputs":[],"source":["train_ft.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"SCIOb45A5RZ5"},"outputs":[],"source":["submission.iloc[:, 1] = lgbm_preds"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"nq9hHrPE5c9d"},"outputs":[],"source":["submission.to_csv(f\"{DATA_PATH}submission_lgbm_1.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"cFKq9f7kJrK0"},"outputs":[],"source":["submission.to_csv(\"submission_lgbm_1.csv\", index=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"IGv3nkZ6V_zA"},"outputs":[],"source":["pd.DataFrame(smape_score_mean)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"GUhWMkgdWCFK"},"outputs":[],"source":["train_ft_1.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"D3BQizJ2s8Vt"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyOdy+mDktg9twMom9pGdm4h","name":"","provenance":[{"file_id":"1YhMSUwqG2eAopvDCPDw-GD5O5UpTkN1Z","timestamp":1693065386250},{"file_id":"1xc3KRqQn3sUGp0LDoaP4fyHhscrhW6C0","timestamp":1693040959141},{"file_id":"1KHxo_lzkuARFZT_01sZi0oSEpMElihrs","timestamp":1692974289584},{"file_id":"17eUnrNJcE_8YnaWVVnJ6HSDxs3KUesfq","timestamp":1692959932883}],"toc_visible":true,"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}